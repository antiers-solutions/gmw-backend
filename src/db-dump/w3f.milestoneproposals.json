[
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c57"
    },
    "id": "7f1cbf9d-c961-4e01-86e5-1a237f0f519c",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/1004",
    "pr_number": 1004,
    "status": "open",
    "file_name": "ink-analyzer-phase-2-milestone-1.md",
    "user_github_details": [
      {
        "git_user_name": "davidsemakula",
        "git_user_id": 7472843,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/7472843?v=4"
      }
    ],
    "project_md_link": "",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-18T15:08:14.000Z"
    },
    "updated_at": {
      "$date": "2023-09-19T04:03:36.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer/blob/master/LICENSE-MIT)",
        "Notes": "Dual-licensed under either of MIT or Apache 2.0 licenses at the downstream user's option."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer#readme)",
        "Notes": "The semantic analyzer crate's README is published on both [GitHub](https://github.com/ink-analyzer/ink-analyzer/tree/master/crates/analyzer#readme) and [crates.io](https://crates.io/crates/ink-analyzer). It contains instructions for installation and usage, and links to crate specific documentation on docs.rs."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer#testing).",
        "Notes": "See notes for each deliverable below for details about unit and integration tests. In general, unit tests are defined in related modules/submodules, while integration tests are found in the [tests directory of the semantic analyzer (ink-analyzer) crate](https://github.com/ink-analyzer/ink-analyzer/tree/master/crates/analyzer/tests) (e.g. [tests/diagnostics](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/tests/diagnostics.rs)) with related fixtures found in [test-utils/fixtures](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/test-utils/src/fixtures.rs). Checking out the [parse_offset_at](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/test-utils/src/lib.rs#L55-L86) utility may be useful as it is extensively used in both the unit and integration tests."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer/blob/master/Dockerfile).",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer),",
        "Notes": "[Extensive updates](https://github.com/search?q=repo%3Aink-analyzer%2Fink-analyzer+quickfixes&type=code) throughout the [diagnostics module](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/diagnostics.rs) and its [entity-specific and generic submodules](https://github.com/ink-analyzer/ink-analyzer/tree/master/crates/analyzer/src/analysis/diagnostics) add quickfixes to all diagnostics and related tests. Unit tests are found throughout the [entity-specific and generic submodules](https://github.com/ink-analyzer/ink-analyzer/tree/master/crates/analyzer/src/analysis/diagnostics) of the [diagnostics module](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/diagnostics.rs). [Integration tests](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/tests/diagnostics.rs) are found in the `tests/diagnostics` module with related fixtures in [test-utils/fixtures](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/test-utils/src/fixtures.rs). Quick fixes for diagnostics can also be manually tested using the latest version of the [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=ink-analyzer.ink-analyzer)."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer)",
        "Notes": "[Updates span the semantic analyzer (ink-analyzer) and intermediate representation (ink-analyzer-ir) crates](https://github.com/search?q=repo%3Aink-analyzer%2Fink-analyzer%20ink_e2e&type=code) and also include updates to related unit tests (found in each relevant module e.g. [completions](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/completions.rs)) and integration tests (found in the relevant module in the [tests](https://github.com/ink-analyzer/ink-analyzer/tree/master/crates/analyzer/tests) directory e.g [completions](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/tests/completions.rs) and related [fixtures](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/test-utils/src/fixtures.rs)). Support for the ink_e2e macro can also be manually tested using the latest version of the [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=ink-analyzer.ink-analyzer)."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer),",
        "Notes": "The [new_project](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/codegen.rs#L42-L88) function is part of the [public interface](https://docs.rs/ink-analyzer/latest/ink_analyzer/#functions) for the semantic analyzer (ink-analyzer) crate via a [re-export](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/lib.rs#L60). [Unit tests](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/codegen.rs#L95-L127) can be found in the [codegen module](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/codegen.rs)."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ink-analyzer/ink-analyzer),",
        "Notes": "The highest level utilities are the [item::actions](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/actions/item.rs#L71-L105), [item::item_ink_entity_actions](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/actions/item.rs#L257-L425), [item::root_ink_entity_actions](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/actions/item.rs#L427-L450) functions in the [actions/item submodule](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/actions/item.rs). [Unit tests](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/src/analysis/actions/item.rs#L488-L968) can be found in the `actions/item` submodule and [integration tests](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/analyzer/tests/actions.rs) are found in the `tests/actions` module with related fixtures in [test-utils/fixtures](https://github.com/ink-analyzer/ink-analyzer/blob/master/crates/test-utils/src/fixtures.rs)."
      }
    ],
    "assignee_details": [],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c58"
    },
    "id": "5864cd5e-34d2-4308-9c10-60dda7e29d79",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/1003",
    "pr_number": 1003,
    "status": "open",
    "file_name": "evaluations/iso8583_1_igorstojanov.md",
    "user_github_details": [
      {
        "git_user_name": "stojanov-igor",
        "git_user_id": 83087510,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/83087510?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/ISO-8583-implementation.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-18T09:18:03.000Z"
    },
    "updated_at": {
      "$date": "2023-09-19T08:04:20.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/LICENSE)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/pcidss/oracle/src/tests)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/pcidss/Dockerfile)",
        "Notes": ""
      },

      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/interface)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/payment-processor)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/pcidss/oracle)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/Makefile)",
        "Notes": ""
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "nikw3f",
        "git_user_id": 142136841,
        "git_avatar": "https://avatars.githubusercontent.com/u/142136841?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c59"
    },
    "id": "61110c3d-2dbf-463b-ac01-aa7249b68251",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/1002",
    "pr_number": 1002,
    "status": "open",
    "file_name": "swift_api-milestone_3.md",
    "user_github_details": [
      {
        "git_user_name": "dileping",
        "git_user_id": 1463444,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/1463444?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/General-Grants-Program/blob/master/grants/speculative/swift_api.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-17T22:12:51.000Z"
    },
    "updated_at": {
      "$date": "2023-09-17T22:13:58.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/LICENSE)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/README.md),",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Extrinsic/Extensions/StaticExtensionsProvider.swift)",
        "Notes": "Static Extrinsic Extensions"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Config/Config.swift)",
        "Notes": "Configuration object which provides types for SDK, where static types can be set"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Types/ValidatableType.swift)",
        "Notes": "Set of protocols and implementations to validate static and dynamic types over metadata"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Types/FrameType.swift)",
        "Notes": "Set of protocols and helpers for static/dynamic Frame types"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Types/Frame.swift)",
        "Notes": "API for static Frame creation and validation"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/blob/main/Sources/Substrate/Types/Static/Tuples%2BTupleStorageKey.swift)",
        "Notes": "n-map storage keys can be represented as tuples of Key-Hash pairs"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/tree/main/Sources/Substrate/Api)",
        "Notes": "Extension points for developer-friendly APIs. Examples in the Documentation"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/tree/main/Tests)",
        "Notes": "Unit and Integration tests (with `substrate-contracts-node`)"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/tree/main/Documentation)",
        "Notes": "Documentation for Core Types and static extensions"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/tesseract-one/Substrate.swift/tree/main/Examples)",
        "Notes": "Example applications for dynamic and static modes"
      }
    ],
    "assignee_details": [],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5a"
    },
    "id": "0604e7e1-1d31-4fad-a9eb-618acb5e028c",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/1001",
    "pr_number": 1001,
    "status": "open",
    "file_name": "iso_8583_poc_milestone_1.md",
    "user_github_details": [
      {
        "git_user_name": "dastansam",
        "git_user_id": 88332432,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/88332432?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/ISO-8583-implementation.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-15T03:11:39.000Z"
    },
    "updated_at": {
      "$date": "2023-09-18T14:37:55.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/LICENSE)",
        "Notes": "MIT"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main)",
        "Notes": "Main README file contains links to all the crate-specific relevant documentation. Each crate is documented."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/pcidss/oracle/src/tests),",
        "Notes": "Integration tests and unit tests are provided. Integration tests are written to ensure ISO-8583 message is being processed correctly. Unit tests are written over primitive models and functions."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/pcidss/Dockerfile)",
        "Notes": "Dockerfile for Oracle"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/interface)",
        "Notes": "This is a demo interface that uses the PCIDSS Oracle Gateway and Payment Processor to simulate bank dashboard and demo checkout page."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/payment-processor)",
        "Notes": "Simulates a traditional payment processor which is used to process ISO-8583 messages from clients (i.e PoS terminals, ATMs, web payment gateways, etc.) and send them to the appropriate destination. You could think of it as a naive simulation of Stripe or PayPal."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/tree/main/pcidss/oracle)",
        "Notes": "PCIDSS Compliant Oracle contains set of services to process ISO-8583 messages, sync with Substrate chain and maintain local ledger. In a nutshell, it mocks a traditional bank which has issued some cards and is currently used for implementing a PoC implementation of ISO-8583 on a Substrate based blockchain. Substrate chain connection is not implemented yet."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/subclone/payment-processor/blob/main/pcidss/Makefile)",
        "Notes": "Makefile consists of commands to ease the development and testing."
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "nikw3f",
        "git_user_id": 142136841,
        "git_avatar": "https://avatars.githubusercontent.com/u/142136841?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5b"
    },
    "id": "e6e7053c-a04f-4701-b2c8-ed905f2122e6",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/1000",
    "pr_number": 1000,
    "status": "open",
    "file_name": "fidi-dotsight-milestone-1.md",
    "user_github_details": [
      {
        "git_user_name": "fidiroman",
        "git_user_id": 133760597,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/133760597?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/fidi-dotsight-analytics.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-13T16:15:03.000Z"
    },
    "updated_at": {
      "$date": "2023-09-18T17:11:33.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/main/LICENSE)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/main/README.md)",
        "Notes": "As well as evolving [Documentation](https://docs.fidi.tech/)"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/debank/wallet.datasource.spec.ts#L5)",
        "Notes": "See corresponding tests near each key component. The coverage is tracked."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/tree/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/pipelines/services/pipeline/config)",
        "Notes": "Arbitrary data sources and aggregation logic are supported."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/main/src/middlewares/collection/coingecko/wallet-token-price.middleware.ts)",
        "Notes": "See also [Middleware](https://github.com/fidi-tech/dotsight/blob/main/README.md#middlewares)"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/tree/main#contributing)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/main/src/mappers/abstract.mapper.ts)",
        "Notes": "Done by the corresponding [mappers](https://github.com/fidi-tech/dotsight/blob/main/README.md#mappers)."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": "Subsquid integration complete, and network-specific integrations moved out of scope - to keep DotSight network-agnostic."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": "Save as 3a."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": "Save as 3a."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": "Save as 3a."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/fidi-tech/dotsight/blob/12280b45f5f1ddd855d6b91eaee4abbf1916f534/src/data-sources/collection/giant-squid/stats/wallet-token.datasource.ts#L22)",
        "Notes": "Save as 3a."
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "keeganquigley",
        "git_user_id": 35080151,
        "git_avatar": "https://avatars.githubusercontent.com/u/35080151?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5c"
    },
    "id": "cc6b38fa-45fd-41cd-8052-199740ee91d8",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/999",
    "pr_number": 999,
    "status": "open",
    "file_name": "cosmwasmvm_coreproduct-milestone_1.md",
    "user_github_details": [
      {
        "git_user_name": "JafarAz",
        "git_user_id": 107645336,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/107645336?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/CosmWasmVM-CoreProduct.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-13T16:01:51.000Z"
    },
    "updated_at": {
      "$date": "2023-09-18T21:06:41.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/ComposableFi/composable/blob/main/code/parachain/frame/cosmwasm/License.md]",
        "Notes": ""
      },
      {
        "Deliverable": "https://github.com/ComposableFi/composable/tree/main/code/parachain/frame/cosmwasm]",
        "Link": "",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ComposableFi/composable/tree/main/code/parachain/frame/cosmwasm)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/ComposableFi/composable/blob/main/code/xcvm/lib/core/src/transport/xcm/mod.rs),",
        "Notes": ""
      },
      {
        "Deliverable": "https://github.com/ComposableFi/cosmwasm-vm/blob/main/orchestrate/README.md),",
        "Link": "",
        "Notes": ""
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "dsm-w3f",
        "git_user_id": 112647953,
        "git_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5d"
    },
    "id": "f9d56599-2366-4c78-872d-e7fe4913c1ad",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/996",
    "pr_number": 996,
    "status": "open",
    "file_name": "stylograph-1-2.md",
    "user_github_details": [
      {
        "git_user_name": "deep-ink-ventures",
        "git_user_id": 120174523,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/120174523?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/Stylograph.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-06T10:08:00.000Z"
    },
    "updated_at": {
      "$date": "2023-09-18T16:48:24.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/pallet_hookpoints/blob/main/LICENSE)",
        "Notes": "Apache 2.0 license for `pallet_hookpoints`"
      },
      {
        "Deliverable": "",
        "Link": "https://medium.com/@GenesisDAO/introducing-the-hookpoints-pallet-377de6680c2d),",
        "Notes": "Exhaustive inline documentation and basic tutorial provided. See also the Medium article for a detailed walkthrough."
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/pallet_hookpoints/blob/main/src/tests.rs)",
        "Notes": "High test coverage. Tests can be run using `cargo test`"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/pallet_hookpoints/blob/main/src/benchmarking.rs)",
        "Notes": "Pallet Hookpoints includes benchmarks"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/pallet_hookpoints),",
        "Notes": "Developed as specified in the original proposal"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/hookpoints-cli/blob/main/LICENSE)",
        "Notes": "Apache 2.0 license for `hookpoints-cli`"
      },
      {
        "Deliverable": "",
        "Link": "https://medium.com/@GenesisDAO/introducing-the-hookpoints-pallet-377de6680c2d),",
        "Notes": "Exhaustive inline documentation and basic tutorial. Medium article provides a detailed walkthrough"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/hookpoints-cli/tree/main/src/tests)",
        "Notes": "High test coverage. Tests can be executed using `cargo test`"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/hookpoints-cli),",
        "Notes": "CLI generates `hooks.rs` and all boilerplate/trait code. Refer to the Medium article for details"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/deep-ink-ventures/genesis-dao-node/blob/main/pallets/dao-votes/src/tests.rs#L342-L379)",
        "Notes": "Genesis DAO uses this implementation. An example can be found at the provided GitHub link"
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "semuelle",
        "git_user_id": 1389409,
        "git_avatar": "https://avatars.githubusercontent.com/u/1389409?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5e"
    },
    "id": "c409a970-aa76-4877-b7f5-91db173b6489",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/992",
    "pr_number": 992,
    "status": "open",
    "file_name": "xcavate-milestone_1.md",
    "user_github_details": [
      {
        "git_user_name": "xcavate2022",
        "git_user_id": 110963708,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/110963708?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/Xcavate.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-09-02T20:15:57.000Z"
    },
    "updated_at": {
      "$date": "2023-09-19T05:45:33.000Z"
    },
    "reviewers": [
      {
        "reviewer": "semuelle",
        "reviewer_id": 1389409,
        "reviewer_avatar": "https://avatars.githubusercontent.com/u/1389409?u=31c1613913d83e539e98fe85ac7d370fbf457076&v=4"
      }
    ],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Lending_Pool/blob/MVP_Lending_Protocol/README.md]",
        "Notes": "Documentation to guide the tester through loan process & functionality"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Lending_Pool]",
        "Notes": "This is a fully functioning substrate node"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/lending_protocol_contracts]",
        "Notes": "Ink! based contracts that interact with the contracts pallet"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Lending_Pool/tree/MVP_Lending_Protocol/pallets/community-loan-pool]",
        "Notes": "Actually called Community Loan Pallet - A percentage of all XCAV tokens will be deposited in an account, once minted, to facilitate all approved real estate developer loans"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Lending_Pool/tree/MVP_Lending_Protocol/pallets/xcavate-staking]",
        "Notes": "Community Loan Staking - This is its basic format... additional work is needed to make production ready"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/kilt-credentials]",
        "Notes": "Not a pallet - It leverages the KILT protocol - going forward this will be a DID pallet that communicates with KILT via XCM"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Lending_Pool/blob/MVP_Lending_Protocol/node/Cargo.toml]",
        "Notes": "Our chain uses the SUDO pallet... this will continue until it has matured enough for the full community governance structure to be implemented"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Frontend]",
        "Notes": "React.js Frontend"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Backend]",
        "Notes": "node.js Backend"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/XcavateBlockchain/MVP_Admin]",
        "Notes": "Backend admin - to enable credential attestation"
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "dsm-w3f",
        "git_user_id": 112647953,
        "git_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c5f"
    },
    "id": "25bd818c-4656-4d0b-af4e-8421d356b176",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/984",
    "pr_number": 984,
    "status": "open",
    "file_name": "xnft_milestone1.md",
    "user_github_details": [
      {
        "git_user_name": "anshulWeb3",
        "git_user_id": 100308982,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/100308982?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/xNFT.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-08-28T06:39:48.000Z"
    },
    "updated_at": {
      "$date": "2023-09-18T09:14:51.000Z"
    },
    "reviewers": [
      {
        "reviewer": "semuelle",
        "reviewer_id": 1389409,
        "reviewer_avatar": "https://avatars.githubusercontent.com/u/1389409?u=31c1613913d83e539e98fe85ac7d370fbf457076&v=4"
      }
    ],
    "repos": [],
    "assignee_details": [
      {
        "git_user_name": "semuelle",
        "git_user_id": 1389409,
        "git_avatar": "https://avatars.githubusercontent.com/u/1389409?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c60"
    },
    "id": "7c3676ac-bf9e-4ba5-8233-7115136ba4e1",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/973",
    "pr_number": 973,
    "status": "open",
    "file_name": "evaluations/validator-monitoring-service_1_ali-usama.md",
    "user_github_details": [
      {
        "git_user_name": "Ali-Usama",
        "git_user_id": 67996826,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/67996826?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/Validator_Monitoring_Service.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-08-10T13:48:31.000Z"
    },
    "updated_at": {
      "$date": "2023-09-14T16:12:52.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/blob/main/LICENSE)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/blob/main/docs/overview.md),",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service#how-to-setup-run-and-test)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service#how-to-setup-run-and-test)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/tree/main/exporters/events)",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/tree/main/bot)",
        "Notes": ""
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "dsm-w3f",
        "git_user_id": 112647953,
        "git_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c61"
    },
    "id": "9c8c0cc3-a978-4a01-81d6-18b803747deb",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/971",
    "pr_number": 971,
    "status": "open",
    "file_name": "validator_monitoring_service-milestone_1.md",
    "user_github_details": [
      {
        "git_user_name": "avtishin",
        "git_user_id": 14963755,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/14963755?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/Validator_Monitoring_Service.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-08-10T06:07:17.000Z"
    },
    "updated_at": {
      "$date": "2023-09-11T18:39:38.000Z"
    },
    "reviewers": [],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/blob/main/docs/overview.md",
        "Notes": "And https://github.com/p2p-org/polkadot_monitoring_service/blob/main/README.md"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service#events-exporters-and-grafana-dashboard",
        "Notes": "You need to test two components: 1) exporters and a Grafana instance: after running docker-compose, go to the local Grafana http://127.0.0.1:3000/d/fDrj0_EGz/p2p-org-polkadot-kusama-dashboard?orgId=1 and check that for the validators the collection of metrics started (the dashboard is not empty) 2) tg bot: follow the instruction in the read me (tg bot should generate values.yml for the Grafana)"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service",
        "Notes": ""
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/tree/main/exporters/events",
        "Notes": "We collect data for unique metrics such as finality (prevotes and pre commits), common data (rewards points, etc), and validator-related events. Everything dockerised"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/p2p-org/polkadot_monitoring_service/tree/main/bot",
        "Notes": "A bot provides full monitoring as a service and sets up a personal Grafana dashboard for every platform user (you do not need to run tg bot if you run it only locally and only for yourself (without external users)."
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "dsm-w3f",
        "git_user_id": 112647953,
        "git_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c62"
    },
    "id": "c5dcccbb-2d9b-49eb-9b5e-1f9457550661",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/918",
    "pr_number": 918,
    "status": "open",
    "file_name": "interstellar-network-wp2-m1.md",
    "user_github_details": [
      {
        "git_user_name": "nashjl",
        "git_user_id": 4605611,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/4605611?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/Interstellar-network2.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-07-11T17:22:49.000Z"
    },
    "updated_at": {
      "$date": "2023-09-12T10:17:15.000Z"
    },
    "reviewers": [
      {
        "reviewer": "takahser",
        "reviewer_id": 5393704,
        "reviewer_avatar": "https://avatars.githubusercontent.com/u/5393704?u=42952cbf81d432e5f3372af4abf63291ae0677e6&v=4"
      }
    ],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/Interstellar-Network/lib-garble-rs/tree/w3f-phase2-milestone1),",
        "Notes": "Mobile offline demo  app with the new evaluator and a pre-computed circuit  generated with the new scheme"
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "takahser",
        "git_user_id": 5393704,
        "git_avatar": "https://avatars.githubusercontent.com/u/5393704?v=4"
      }
    ],
    "__v": 0
  },
  {
    "_id": {
      "$oid": "65097464c79ddc4d607c2c63"
    },
    "id": "a51cb815-5f78-47ae-b3b2-e6d2f14f9320",
    "pr_link": "https://api.github.com/repos/w3f/Grant-Milestone-Delivery/pulls/835",
    "pr_number": 835,
    "status": "open",
    "file_name": "zkverse_milestone_1.md",
    "user_github_details": [
      {
        "git_user_name": "VegeBun-csj",
        "git_user_id": 39252213,
        "git_user_avatar": "https://avatars.githubusercontent.com/u/39252213?v=4"
      }
    ],
    "project_md_link": "https://github.com/w3f/Grants-Program/blob/master/applications/zkverse.md",
    "md_link": null,
    "created_at": {
      "$date": "2023-04-17T16:05:02.000Z"
    },
    "updated_at": {
      "$date": "2023-09-17T15:39:20.000Z"
    },
    "reviewers": [
      {
        "reviewer": "dsm-w3f",
        "reviewer_id": 112647953,
        "reviewer_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "repos": [
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk/blob/master/LICENSE",
        "Notes": "Apache License"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk/blob/master/zk-tutorials/proof-system/groth16/theory_to_practice.md",
        "Notes": "This doc will show how to practise the zk example"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk",
        "Notes": "Test the pallet function"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk/blob/master/docker-compose.yml",
        "Notes": "Docker yaml file"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk/tree/master/bellman-verifier",
        "Notes": "make the bellman to adapt the substrate with no_std"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/snarkjs-bellman-adapter/tree/main",
        "Notes": "adapt the snarkjs and bellman with some circuit examples"
      },
      {
        "Deliverable": "",
        "Link": "https://github.com/Zkvers/substrate-zk/tree/master/zk-tutorials",
        "Notes": "Introduce the background knowledge of zk and the theory of groth16, and practice it through specific examples."
      }
    ],
    "assignee_details": [
      {
        "git_user_name": "dsm-w3f",
        "git_user_id": 112647953,
        "git_avatar": "https://avatars.githubusercontent.com/u/112647953?v=4"
      }
    ],
    "__v": 0
  }
]
