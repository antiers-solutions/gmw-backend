export const PROJECTS: any[] = [
  {
    _id: {
      $oid: '64ca432c718d788969a5ae19'
    },
    id: 'b7e15891-7d4b-4218-869b-e0da32191a6e',
    user_github_id: null,
    file_name: 'admeta.md',
    start_date: {
      $date: '2021-12-15T10:19:48.000Z'
    },
    html_url:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/AdMeta.md',
    payment_details: '0x1d346c4f0732674a1fc69b4bafba854f53353c35 (erc20 usdt)',
    md_content:
      "# AdMeta\n\n- **Team Name:** AdMeta\n- **Payment Address:** 0x1D346c4F0732674a1fc69b4bAFBa854F53353C35 (ERC20 USDT)\n- **[Level](https://github.com/w3f/Grants-Program/tree/master#level_slider-levels):** 2\n\n## Project Overview :page_facing_up:\n\n### Overview\n\nAdvertising in Metaverse\n\nAdMeta is a Metaverse advertisement platform that focuses on privacy-preserving. AdMeta uses a TEE-based DID service to identify target groups for advertisers, and with the usage of TEE, AdMeta guarantees not to collect any user data. AdMeta builds multiple forms of ad assets (e.g. billboards, wall paintings) in Metaverse platforms like Decentraland, Bit.Country, to allow land holders to integrate our products easily. Qualified conversions let both users and publishers get rewards from advertisers.\n\nIn Polkadot and Kusama ecosystem, DID projects like Litentry are growing fast along with its related products. We have already discussed and agreed on our initial cooperation with Litentry. Also, we have contacted with Metaverse projects like Bit.Country, who shows great interests in cooperation as well.\n\nUnlike traditional ad platforms, who collect users sensitive data(e.g. location, browsing history) for advertising, AdMeta does not collect or store any user data per se. Instead, users voluntarily decide and control what data can be stored in TEE, and the stored data in TEE cannot be accessed by anyone except users themselves.\n\n### Project Details\n\n![AdMeta Demo - the floating billboard](https://user-images.githubusercontent.com/4738254/144754078-1877d8a5-8ef9-49ec-8ef5-f79496a689f0.png)\n\nIn the above image, the floating billboard is our prototype ad component built with decentraland SDK. Users who registered on our blockchain, and switched \"Ad Display\" option on (by default it's off) are able to see a customized ad content on this billboard while gaming in decentraland.\n\nThe content of this ad component is selected according to user's personal data and preference. Unlike centralized ad platforms, we don't store user's data on or database. Instead, it's stored on the TEE layer of blockchain, and the target group matching and selecting happen also in the TEE layer, which ensures that no private data are exposed during the whole process. Eventually, both user and publisher receive some amount of token as rewards from advertiser.\n\nOur blockchain is built with Substrate, and the pallet-ad provides the functionality of advertisement proposal, storage and governance. The user pallet will connect to TEE-based external identity aggregation and DID service provided by Litentry (we have already the initial cooperation plan) to match ads with users data and preference.\n\n#### Architecture\n\n![AdMeta Architecture](https://raw.githubusercontent.com/h4n0/gists/master/admeta/admeta_architecture.svg)\n\n**Advertisers** can propose an ad with certain acceptance rule, e.g. link clicking, and also advertiser provides how many times the ads are displayed and converted, and how much they pay for each conversion. They need to pay the total price (the number of conversions \\* price per conversion) while proposing the ad. Each ad display has a unique ID, which is generated while creating the proposal. A Merkle tree are built with all these unique IDs, and the root of Merkle tree will be stored in on-chain storage. A qualified conversion gives the participated user this UID, with which the user can claim for rewards.\n\n**Councils** shall approve or reject ad proposals according to the content of ads. Also, advertisers are evaluated on their behavior democratically.\n\n**Users** can switch on the \"Ad Display\" option on AdMeta, so that users can get rewards by viewing and interacting with ads. By default, this option is off, which means users who haven't set up their AdMeta won't see any ads. Users can also provide their data for a better ad matching, by means of this they will get more rewards.\n\n**Publishers** can simply utilize our Ad Assets on any Metaverse platform and place it on their lands. Users also get rewards by a qualified display conversion.\n\n#### Technology Stack\n\n- Substrate\n- Node.js\n- 3D Model Design\n\n### Ecosystem Fit\n\nThere are an increasing number of Metaverse related projects in Polkadot/Kusama ecosystem, however, the current Metaverse platforms still lack of infrastructures and applications, comparing to our current real life. We therefore build this for various Metaverse platforms.\n\nOur target audiences can be Web3 projects, who are potential advertisers, Metaverse land holders, who are potential publishers, and Metaverse players, who are potential users.\n\nAdvertising is our natural needs in almost all social scenarios, and we meet this needs in Metaverse.\n\n[Parami](https://parami.io/) builds Web3 ad platforms as well, and their scope is to build the DID and privacy layer by themselves. While we are focusing on the advertising functionality, and the DID service will be provided by Litentry, who is more professional on this field and has already their products. Also, our ad platform is targeting on Metaverse, not Web3.\n\n## Team :busts_in_silhouette:\n\n### Team members (In order of joining time)\n\nHan Zhao - Core Dev and PM of Litentry Parachain Team. University of Stuttgart\n\nYvonne Xie - Digital Marketing Lead. King's College London\n\nShihao Zhao - Full Stack Dev of Litentry. University of Toronto\n\nHao Ding - VP of Litentry, Founder of Web3Go. University of Stuttgart\n\nDr. John Wu - Core Dev of Litentry Parachain Team. The University of Tokyo\n\n### Contact\n\n- **Contact Name:** Han Zhao\n- **Contact Email:** windzhaohan@gmail.com\n- **Website:** <https://admeta.network/>\n\n### Legal Structure\n\n- **Registered Address:** No legal structure yet.\n- **Registered Legal Entity:** No legal structure yet.\n\n### Team's experience\n\nHan and John are core developers as well as project managers at Litentry, and both of them are main developers who implemented the Litentry parachain from scratch. Litentry is an identity aggregation focused company in Polkadot ecosystem, and has got the Web3 Foundation grant since 2019.\n\nYvonne has more than 8 years experience of digital marketing, and she has a deep understanding and practice of various online marketing and advertising methods. She also initialized this idea of combining advertisement and privacy preserving, to archive the goal of data protection.\n\nShihao is a full stack developer at Litentry, who contributes a lot in Litentry and Web3Go web apps and backend apps.\n\nHao is the founder of Web3Go, VP of Litentry, who has a very solid practical experience on both blockchain and data science.\n\nNote: Both [Litentry](https://www.litentry.com/) and [Web3Go](https://github.com/w3f/Grants-Program/blob/master/applications/Web3Go.md) are Web3 granted projects.\n\n### Team Code Repos\n\n- <https://github.com/litentry/litentry-parachain>\n- <https://github.com/litentry/litentry-pallets>\n- <https://github.com/web3go-xyz/web3go>\n\nPlease also provide the GitHub accounts of all team members. If they contain no activity, references to projects hosted elsewhere or live are also fine.\n\n- <https://github.com/h4n0> Han Zhao\n- <https://github.com/Shihao66> Shihao Zhao\n- <https://github.com/Moehringen> Hao Ding\n\n### Team LinkedIn Profiles (if available)\n\n- <https://www.linkedin.com/in/zhaohan6>\n- <https://www.linkedin.com/in/shihao-zhao-55752685/>\n- <https://www.linkedin.com/in/hao-ding-msc-pmp-64411193/>\n\n## Development Status :open_book:\n\n- <https://github.com/AdMetaNetwork/admeta> This is the AdMeta Substrate chain implementation. We already started to build the pallets mentioned in Milestone 1 below.\n- <https://github.com/AdMetaNetwork/admeta-webapp> This is our web app repo according to Milestone 1. We already had a single page app with polkadot js API integrated now.\n- <https://github.com/AdMetaNetwork/admeta-decentraland> This is a simple asset built with Decentraland SDK, and currently it's just for a demo purpose.\n- <https://admeta.network/> We also have the first version of our website.\n\n## Development Roadmap :nut_and_bolt:\n\n### Overview\n\n- **Total Estimated Duration:** 1 months\n- **Full-Time Equivalent (FTE):** 2 FTE\n- **Total Costs:** 12,000 USD\n\n### Milestone 1 — Substrate Chain with Impression Ad, Web App\n\n- **Estimated duration:** 6 month\n- **FTE:** 2\n- **Costs:** 12,000 USD\n\n| Number | Deliverable                 | Specification                                                                                                                                                                                                                                                                                                  |\n| -----: | --------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|    0a. | License                     | GPLv3                                                                                                                                                                                                                                                                                                          |\n|    0b. | Documentation               | We will provide both **inline documentation** of the code and a basic **tutorial** that explains how a user can (for example) spin up one of our Substrate nodes and send test transactions, which will show how the new functionality works.                                                                  |\n|    0c. | Testing Guide               | Core functions will be fully covered by unit tests to ensure functionality and robustness. In the guide, we will describe how to run these tests.                                                                                                                                                              |\n|    0d. | Docker                      | We will provide a Dockerfile(s) that can be used to test all the functionality delivered with this milestone.                                                                                                                                                                                                  |\n|    0e. | Article                     | We will publish an **article**/workshop that explains our advertising workflow as well as technical details.                                                                                                                                                                                                   |\n|     1. | Substrate module: ad        | We will create a Substrate module that will allow advertiser to create impression ads, and with council's approval, this ad will be ready to be displayed. If ads are rejected by the council(e.g. illegal or pornographic content), the advertiser's proposal bond will be slashed and collected in treasury. |\n|     2. | Substrate module: user mock | We will create a Substrate module that will first store users data on chain, to test and verify our logic. Also, user can update their data, control what data should be used, and these data are used to find the best matching ad for user.                                                                  |\n|     3. | Substrate chain             | Module ad and user can be integrated into a substrate node, to enable users access of all approved ads, receive rewards, etc. This chain will integrate treasury, council, democracy and also other essential pallets, to build a full-featured blockchain.                                                    |\n|     4. | Web App                     | We will create a web app, to let users easily interact with our substrate node. Users can claim rewards from viewing and clicking ads, and they can also configure their ad preferences and decide if they are willing to view ads or not.                                                                     |\n\n## Future Plans\n\nThe next step is to have sensitive data stored in TEE. Also, we will build more ad types, like click ads and acquisition/action ads. Meanwhile, we will implement a Chrome extension to simplify the claim process, and an Ad asset on Decentraland(or other Metaverse platform) to enable land holders to use our ad assets conveniently.\n\nIn a long run, we will cooperate and adapt our products with more Metaverse platforms, and also we will develop more creative and interactive ad types.\n\n## Additional Information :heavy_plus_sign:\n\n**How did you hear about the Grants Program?** Personal recommendation\n",
    md_link:
      'https://raw.githubusercontent.com/shaurya-ATR940/Grants-Program_dummy/master/applications/AdMeta.md',
    project_name: 'admeta',
    status: 'complete',
    total_cost: {
      amount: '12000',
      currency: 'usd'
    },
    total_duration: '1 months',
    team_id: '945eae99-7d37-4492-b942-9bc3afd58bd0',
    level: '2',
    legal_structure: {
      registered_address: 'no legal structure yet.',
      registered_legal_entity: 'no legal structure yet.'
    },
    milestones: ['8f276a33-a8e3-4cb2-9d4a-24da91724407'],
    totalMilestones: 1,
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5ae1a'
    },
    id: '07c49e56-9a1e-444c-9a5b-a65d723ba757',
    user_github_id: null,
    file_name: 'afloat.md',
    start_date: {
      $date: '2022-05-12T09:10:03.000Z'
    },
    html_url:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Afloat.md',
    payment_details: 'bc1q0aghk8qufzwpmrp5nfyu9r7dh3yynmphk7rhjj',
    md_content:
      "# Afloat Tax Infrastructure Polkadot Integration\n\n- **Team Name:** Afloat Inc.\n- **Payment Address:** bc1q0aghk8qufzwpmrp5nfyu9r7dh3yynmphk7rhjj\n- **[Level](https://github.com/w3f/Grants-Program/tree/master#level_slider-levels):** 2\n\n## Overview\n\n[Afloat](https://stayafloat.io/#/) is one of the first real-use cases of blockchain technology in the accounting industry. It enables the fractional buying and selling of tax credits that historically have been inefficient, opaque, and centralized. It has already processed tax credits ranging in orders from $2K -$70k USD.\n\nAfloat was built on a private Ethereum clone but wants to migrate to Polkadot due to its technology, identity management, and community. Parachains like Kilt and their identity services would be crucial at validating government roles and professional certifications like accountants and institutional sellers.\n\n## Project Details\n\n### Background\n\nA common tax credit is for land preservation. The inhabitants of a geographic area recognize that their shared quality of life may be positively impacted if more land was preserved rather than developed. If the owner of land property in that area agrees to preserve land, they may be eligible to receive a tax credit in an amount associated with the value of the land property. However, some owners of tax credits do not have enough tax liability to take full advantage of the reward. Because of this, a number of states allow credits to be transferred. State transferable tax credits are typically bought and sold at a discount.\n\nHistorically, the tax credit industry’s transfer process has been deeply inefficient. Due to a lack of trust between buyers and sellers, accountants and lawyers act as middlemen. This added financial and procedural cost creates an entry barrier for the majority of taxpayers into the tax credit market. What remains is a tight-knit group of wealthy buyers, sellers, and policymakers.\n\n### Product\n\n[Afloat](https://stayafloat.io/#/) uses blockchain technology to add trust and liquidity to the market, allowing smaller fractional shares of tax credits to be transferred. So far, Afloat has facilitated the transfer of over $500,000 worth of tax credits between multiple buyers and sellers, 90% with whom Afloat anticipates an ongoing relationship. One of the platform’s sellers is an international company with over 10,000 employees, and the value of tax credits purchased per buyer has so far ranged between less than $2,000 and over $70,000.\n\nWith the ability to tap into a market sector that knows nothing about blockchain or cryptocurrency, Afloat has the potential to lay the foundation to onboard traditional companies into the Polkadot ecosystem beyond using only Afloat. We have 120 active users, many of which are CPAs (public accountants) and represent a network of taxpayers (credit buyers and sellers). We purposefully haven't had any marketing campaigns and have been cautious with growth so far. As of April 15, 2022, we have successfully processed more than twice the total number of tax credits processed in 2021. We had a large batch of users enroll in December 2021 (end of tax year) and material increase (4x) year over year.\n\nHaving started in the US, Afloat, Inc., a Wyoming company, is compliant with existing federal, state, and local regulations and takes care of the entire transfer process with the following functions:\n\n- Uploading proof of tax credit ownership\n![Image](https://user-images.githubusercontent.com/7217054/159963378-b850c316-aa28-46ea-9a87-2e184de57a0d.png)\n\n- Linking a US bank account\n![Image](https://user-images.githubusercontent.com/7217054/159963375-a06565dc-9f19-4aa9-8e31-a6223aa2cef8.png\")\n\n- Fiat integration using Dwolla, a third party company\n- Placing buy and sell limit orders on blockchain\n\n![Image](https://user-images.githubusercontent.com/7217054/159963749-d7e2ef89-fac0-4f4c-a823-9dd3a4e9d263.png)\n\n- Algorithmic matching overlapping full or partial orders in a ”pending” status while waiting for government approval\n\n![Image](https://user-images.githubusercontent.com/7217054/159963752-dc5f9323-1d07-4bc5-b309-ab2147ff71b8.png)\n\n- Autopopulate tax forms with blockchain data (Afloat supports five of thirty-six US tax forms)\n- Completion of government paperwork and money transfer after government approval\n\nTax credits, as a socioeconomic tool, are very similar to concepts found in the Substrate, Polkadot, Kusama (dotsama) ecosystem, where the tokenomics are decided by participants through a governance process designed to maximize the benefit for the network. For example, the network will:\n\n1. \"mint or burn DOTs in order to reward the nodes that run the consensus protocol, to fund the treasury, to control the inflation rate, etc.\"\n2. \"[ensure] DOTs also play a role in slashing protocols designed to disincentivize attacks or adversarial behaviors,\"\n3. \"let DOT holders express their opinion in governance decisions\",  and\n4. \"decide which projects are allocated a parachain slot\".\n\n### Migration\n\nInitially we will run on a standalone chain as a pallet. This provides the most latitude and flexibility. The initial phase is primarily focused on function, usability, and ensuring the core asset type design is secure and composable. It also includes existing user and asset migration. We will have a one-time process per user to teleport their account and assets. Most likely, we will not teleport any orders or redemptions currently in process. They would close out on the old platform, and users would create new ones after they migrate.\n\nWe did not include any scope or fund request in the proposal related to the migration work. The scope of the w3f proposal is focused on building the open source components. These will be available for the community, and Afloat will be an implementation of them. Making the pallets and tooling as general purpose as possible should help with reusability, for us and other projects.\n\nTo handle fractional tax credits in Substrate we are using \"fruniques\". That is our name for *FRactional UNIQUES*. It'll be compatible with the Uniques pallet and eventually with RMRK as well. It allows the user to spawn a new NFT from an existing NFT, repeatedly, while specifying an associated amount. The integrity of the total quantity must remain intact, along with metadata, but each of these NFTs can be priced, transferred, and redeemed individually.\n\nAn earlier implementation of this used a fungible token to represent the parts of the tax credit, but we've found that fractional NFTs fit the mental model a bit better and more ergonomically in existing tools. A user is buying a \"thing\", see that thing in their wallet, where they may hold 7 of them. Holding various quantities of 7 different fungible tokens seemed to increase the complexity more than necessary. This is a design element we frequently brainstorm on though. In a future release, it may be useful to have fruniques support both use cases.\n\nThis proposal covers the migration or creation of the following:\n\n1. User onboarding (set and verify identity with gatekeeper parameters) and slides.\n2. Sign and Login with email.\n3. Originate and configure a tax credit and create sales orders for tax credits.\n4. Support for encrypted files attached to tax credits.\n5. Sell the entire or a fraction of the tax credit to interested buyers using fruniques pallets.\n6. Ability for buyers to place buy orders.\n7. Asset redemption workflow (tax credits require a 'redemption specialist').\n8. Launch materials, videos and speaking arrangements.\n\n### Workflow\n\n![Image](https://user-images.githubusercontent.com/7217054/160020369-b64ae31d-8cc5-49ce-8c4d-82dea85546cf.png)\n\n## Ecosystem Fit\n\nAfloat serves tax payers that want to buy and/or sell tax credits. These users will benefit by Polkadot's improved security and by gaining compatibility for liquidity. Polkadot will benefit from the influx of non-technical users into the ecosystem. Tax Credits trade with a heavy discount to face value, and Polkadot participants will likely want to hold them during that lifespan even if they aren't the final redeemer. If a 5-year expiration credit is priced at $0.60-to-the-dollar by its impatient originator, it could be purchased via a more patient market maker to perhaps be sold at $0.90 in year 3 or 4, just as an example.\n\nThe secondary target audience are the community of developers that will benefit by leveraging the open source components and integrations with tax credit fruniques.\n\n### Community\n\nAs the perfect technology for record-keeping, blockchain makes a lot of sense for accountants. Afloat not only wants to bring its infrastructure to Polkadot but also bring Polkadot into the accounting community with the following:\n\n#### Continuing Education for CPAs\n\nAfloat’s founder and current CEO [Louise Reed](https://www.linkedin.com/in/louisewreed/) has given talks at a number of CPE conferences, where CPAs receive continuing education credits to maintain their licenses each year. Introducing her to Web 3 infrastructure would allow her to speak about it at CPA conferences, especially to other CPAs looking for classes covering new and interesting topics and ideas.\n\n#### Crypto Clients\n\nWorking in a historically conservative industry, CPAs are starting to feel the push from blockchain/crypto clients to accept the new technology and are now being forced to help with risk mitigation (alongside lawyers).\n\n#### Sellers\n\nTypically, sellers of tax credits are large international businesses, which are usually slow with internal changes. However, familiarity with the tax credit market paves the way for an easier introduction to a new technology.\n\n#### Buyers\n\nIntroducing programming/blockchain/crypto taxpayers to tax savings by way tax credits would bring new customers to a marketplace that has a strong history of centralization, opacity, and insularity.\n\n#### Bridging Communities\n\nAfloat would naturally bridge two opposing communities: accounting, the most trusted and conservative industries, and blockchain, one of the most innovative industries. By association with such a trusted industry, blockchain would receive credibility in the eyes of the general public while also modernizing accounting with new and better processes.\n\n#### Natural Use Case\n\nThere is a huge educational and technological divide in the learning curve for accountants when it comes to blockchain, but Afloat adds an easy and natural way to learn.  Most people, including CPAs and businesses, tend to understand only what they can see and experience, and Afloat brings tangibility to an otherwise intangible industry.\n\n#### Speaking arrangements\n\nLouise Reed is scheduled to speak at the following Certified Public Accountant Societies.\n\n| Date of Talk | CPA Society | Location |\n| -----------: | ----------- | -------- |\n| 5/26/2022    | NC          | Greensboro |\n| 8/24/2022    | GA          | Atlanta |\n| 9/26/2022    | VA (+ VA Tech) | Roanoke |\n| 11/17/2022   | VA (+ VA Tech) | Virginia Beach |\n\n## Team :busts_in_silhouette:\n\n### Team members\n\n- Louise Reed - CEO and founder\n- Max Gravitt - Architect\n- Jose Maria Gayosso - UI Developer\n- Erick Casanova - Blockchain Engineer\n- Abel Yanez - Substrate Developer\n\n### Contact\n\n- **Contact Name:** Louise Reed\n- **Contact Email:** louise@stayafloat.io\n- **Website:** <https://stayafloat.io/#/>\n\n### Legal Structure\n\n- **Registered Address:** 6118 Saint Andrews Lane, Richmond, VA 23226\n- **Registered Legal Entity:** Afloat, Inc.\n\n### Team's experience\n\nWith a master's degree in physics from Duke University and a Master of Accounting from the University of North Carolina at Chapel Hill, Louise W. Reed has been a CPA for fifteen years and has grown a successful private practice that specializes in working with small businesses. In the spring of 2018, Louise conceptualized and founded Afloat to allow her clients to have the same tax opportunities traditionally found in only the largest of CPA firms. Under her leadership, Afloat built the current application (private ethereum clone) with an in-house team and successfully launched in 2021. [Awards](https://stayafloat.io/#/media)\n\nAfloat is partnering with Hashed Systems DAO LLC, a substrate development team with years of experience building blockchain applications. They have worked on substrate and Polkadot since spring 2021. Their developers completed Brian Chen's course and have experience running substrate chains and have significant experience working with the Uniques, Identity and Node-authorization pallets. Additional relevant experience below:\n\n[Hypha DAO](https://dho.hypha.earth/#/): Smart contracts and front end development that enables the creation of flexible roles, assignments and contributions with recurring payments. Design and implement a graph data layer to improve web application performance. Design and build a [Double Entry accounting](https://us02web.zoom.us/rec/share/eRqiBvq-dsV0L_hEjW5e8DWNYQlUn2bLhI8-86jkRVwdXiN3TiD5edym17ubCd9R.QhKQw_Byy0t5_8SW?startTime=1647371674000) (Passcode: .V$C#Br2) plattform that streams wallet activity, supports token price history, reporting and currency conversion.\n\n[SEED](https://joinseeds.earth/): Smart contract and mobile development that capture the project's constitution, enable voting on proposals and basic identity management like reputation, vote history etc. Design and build a PWA token swaps app. Design and build a basic [Economic Simulator](https://seeds-sim.hypha.earth/dashboard) that enables voters to understand the economic impact of policy changes.\n\n### Relevant profile links\n\n- Louise Reed CPA website: <https://louisereedcpa.com/>\n- Louise Reed LinkedIn: <https://www.linkedin.com/in/louisewreed/>\n- Abel on Github: <https://github.com/amatsonkali>\n- Jose Maria on Github: <https://github.com/jmgayosso> and Gitlab: <https://gitlab.com/jmgayosso>\n- Hashed website: <https://hashed.io/>\n- Erick on GitHub: <https://github.com/tlacloc>\n\n## Development Roadmap :nut_and_bolt:\n\n### Overview\n\n- **Total Estimated Duration:** 13 weeks\n- **Full-Time Equivalent (FTE):**  2 FTE (across 5 contributors)\n- **Total Costs:** 46,200 USD\n\n#### Languages\n\n- All pallets will be developed in Rust.\n- The custodial/persistence partner backend will be developed in Nodejs, with a slight possibility of porting it to Rust.\n- The front end will be Angular, with a possibility that it will be migrated to Vuejs.\n\n### Milestone 1 — User onboarding (set and verify identity with gatekeeper parameters) and slides\n\n- **Estimated duration:** 5 weeks\n- **FTE:**  2\n- **Costs:** 17,675 USD\n(5 contributors)\n\n| Number | Deliverable | Specification |\n| -----: | ----------- | ------------- |\n| 0a. | License | MIT |\n| 0b. | Documentation | We will provide **inline documentation** of the code and a basic **tutorial** of the modules delivered in this Milestone.|\n| 0c. | Testing | Unit testing will be applied to ensure reliability. Documentation of tests and results will be provided |\n| 0d. | Video | We will provide a video demonstration that will illustrate all of the functionality delivered with this milestone. |\n| 0e. | Article | We will publish an **article** in English and Spanish that explains what was built and how it can benefit other projects |\n| 1. | Set Profile and Upload KYC Materials | User onboarding web client for uploading identity details in a privacy preserving manner. Data will be encrypted and only accessible by 1) the user, 2) a pre-specified KYC administrator account, and 3) a persistence partner/custodian that the user or app administrator selects. |\n| 2. | KYC Admin | KYC administrator screen for viewing and approving new user (market participant) requests. We plan to use the existing `registrar` process on the Identity pallet. UI is in Angular, with a small chance we may migrate it to Vuejs |\n| 3. | Slides |1-3 additional presentation slides for Louise W. Reed, CPA’s currently scheduled talks at CPA conferences regarding blockchain, cryptocurrency, triple-entry accounting and transferring state tax credits.  The additional slides will be added to address why Afloat sees value in being supported by Polkadot’s ecosystem|\n\n### Milestone 2 — Originate and configure a tax credit and create sales order for tax credits\n\n- **Estimated duration:** 4 weeks\n- **FTE:**  2\n- **Costs:** 14,140 USD\n(5 contributors)\n\n| Number | Deliverable | Specification |\n| -----: | ----------- | ------------- |\n| 0a. | License | MIT |\n| 0b. | Documentation | We will provide **inline documentation** of the code and a basic **tutorial** of the modules delivered in this Milestone.|\n| 0c. | Testing | Unit testing will be applied to ensure reliability. Documentation of tests and results will be provided |\n| 0d. | Video | We will provide a video demonstration that will illustrate all of the functionality delivered with this milestone. |\n| 0e. | Article | We will publish an **article** in English and Spanish that explains what was built and how it can benefit other projects\n| 1. | Originate Tax Credit | Web client for onboarding new tax credits as NFTs, appropriate metadata persisted using the Uniques and likely Statemint specifications. |\n| 2. | Upload Confidential Documents | This feature allows for NFT originators to upload encrypted files attached to tax credits. The files will be accessible only by the user and the application administartor. |\n| 3. | Tax Credit verification | MVP Tax Credit pallet, compatible with the prebuilt Uniques pallet (and/or RMRK), will support data validation rules by jurisdiction and tax credit type. The user will be able to save a draft of their tax credit if they need to identify more IRL steps to fix discrepancies. It's like a 'tax credit compiler'. |\n| 4. | List for Sale | Ability for Tax Credit (NFT) owners to assign a price and list it for sale.|\n\n### Milestone 3 — Sell the entire or a fraction of the tax credit to interested buyers using fruniques pallets\n\n- **Estimated duration:** 2 weeks\n- **FTE:**  2\n- **Costs:** 7,070 USD\n(5 contributors)\n\n| Number | Deliverable | Specification |\n| -----: | ----------- | ------------- |\n| 0a. | License | MIT |\n| 0b. | Documentation | We will provide **inline documentation** of the code and a basic **tutorial** of the modules delivered in this Milestone. |\n| 0c. | Testing | Unit testing will be applied to ensure reliability. Documentation of tests and results will be provided |\n| 0d. | Video | We will provide a video demonstration that will illustrate all of the functionality delivered with this milestone. |\n| 0e. | Article | We will publish an **article** in English and Spanish that explains what was built and how it can benefit other projects\n| 1. | Order Part of an NFT | Web client and pallet support for fractionalizing a Tax Credit NFT. Users may specify the % and/or direct amount for the order. Rust and Angular/Vuejs |\n| 2. | Complete/Confirm Order | Sell the entire or a fraction of the tax credit to interested buyers using fruniques pallets. Rust and Angular/Vuejs |\n| 3. | Order Settlement | Ensure the marketplace correctly calculates appropriate commissions and fees. Calculations will be in Rust, displayed in application using Angular/Vuejs |\n\n### Milestone 4 — Redeem the tax credit and confirm redemption and freeze/burn asset on-chain\n\n- **Estimated duration:** 2 weeks\n- **FTE:**  2\n- **Costs:** 7,070 USD\n(5 contributors)\n\n| Number | Deliverable | Specification |\n| -----: | ----------- | ------------- |\n| 0a. | License | MIT |\n| 0b. | Documentation | We will provide **inline documentation** of the code and a basic **tutorial** of the modules delivered in this Milestone.|\n| 0c. | Testing | Unit testing will be applied to ensure reliability. Documentation of tests and results will be provided |\n| 0d. | Video | We will provide a video demonstration that will illustrate all of the functionality delivered with this milestone. |\n| 0e. | Article | We will publish an **article** in English and Spanish that explains what was built and how it can benefit other projects\n| 1. | Approve Redemption Specialists | Pallet and web client for onboarding and approving/enrolling Tax Credit Redemption Specialists. These are experts that know how to perform appropriate steps to migrate a tax credit IRL. Approval will be handled by marketplace administrator initially, by the community eventually. |\n| 2. | Request Redemption | Pallet and web function/form for requesting redemption, optionally from a specific Redemption Specialist or system will choose. |\n| 3. | View materials and Redeem | Pallet support and web client for Redemption Specialist to review the encrypted tax credit materials and confirm that off-chain IRL redemption has been completed. Redemption completion will be approved by owner and Redemption specialist. |\n| 4. | Asset Manager | Once part or all of a tax credit NFT is redeemed, the Tax Credit Asset Manager(s) will be able to lock, freeze, and/or burn the NFT. |\n| 5. | Launch Materials | Launch materials, videos and speaking arrangements for Louise are already in queue.|  \n\n## Future Plans\n\n### Immediate Use\n\nAll Afloat users will be migrated to the substrate application and benefit from the identity and security enhancements. Afloat will gain access to the full substrate ecosystem and vice versa.\n\n### Next Phases\n\nThis proposal covers Afloat migration of the current functionality. Below are future phases that expand it:\n\n#### Phase 2\n\nUser scenarios:\n\n- Registration/approval of new appraisers,\n- Request appraisal of NFT,\n- Appraise NFT,\n- Review and compensate appraiser\n\nWeb client for:\n\n- NFT creator to request judgment and grant access to Asset Grader(s)\n- Asset Grader to review materials and provide judgment\n\n#### Phase 3\n\nUser scenarios:\n\n- More advanced ordering and pricing models,\n- Candle auctions,\n- Improved compatibility with more jurisdictions.\n\n#### Phase 4\n\n- Provide API access and referral program for tax industry participants. (e.g. allow existing systems and networks to seamlessly integrate)\n\n## Additional Information :heavy_plus_sign:\n\n**How did you hear about the Grants Program?**\nRaul Romanutti recommended the program on a call with Louise Reed, Max Gravitt and Augusto Lara on March 21st, 2022.\n\n### Additional Context\n\n#### State Tax Credit Breakdown\n\nCurrently, forty-one states offer tax credits designed to incentivize economically and socially desirable behavior, like historic structure rehabilitation, land preservation and film production.\n\n- Linking a US bank account\n\n![Image](https://user-images.githubusercontent.com/7217054/160020375-0e360e26-17f9-4856-8266-1e95b76efc7c.png)\n\nThirty-four of those states allow the producers of these credits to be incentivized even if they do not have enough state income to fully utilize the credits and/or need the cash flow to further expand the incentivized behavior.  \n\n![Image](https://user-images.githubusercontent.com/7217054/160020372-8190f4aa-81aa-4b0e-ae1b-d92eb031df5b.png)\n\nBlockchain Friendly State Breakdown\n\n![Image](https://user-images.githubusercontent.com/7217054/160020643-84313880-4e0b-4942-8b1a-7278eb7aa219.png)\n\n<https://www.investopedia.com/news/majority-us-states-are-still-acknowledge-cryptocurrencies/>\n",
    md_link:
      'https://raw.githubusercontent.com/shaurya-ATR940/Grants-Program_dummy/master/applications/Afloat.md',
    project_name: 'afloat tax infrastructure polkadot integration',
    status: 'complete',
    total_cost: {
      amount: '46200',
      currency: 'usd'
    },
    total_duration: '13 weeks',
    team_id: 'ea7012bd-676b-4b7f-80b9-26e44079e08c',
    level: '2',
    legal_structure: {
      registered_address: '6118 saint andrews lane, richmond, va 23226',
      registered_legal_entity: 'afloat, inc.'
    },
    milestones: [
      '60d52d97-00cd-41a4-831b-802fbb6962b1',
      'de0e0a1d-e27a-4d76-8c3b-5a1cb25b4dae',
      'b08b19c8-4b1a-4686-b548-57c955e78fff',
      'ed5b5728-f313-433a-9c44-cc9d71e44de9'
    ],
    totalMilestones: 4,
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5ae1c'
    },
    id: 'ff1fd744-f93a-424a-a129-4d2ef9d20401',
    user_github_id: null,
    file_name: 'anchor.md',
    start_date: {
      $date: '2023-02-14T12:01:17.000Z'
    },
    html_url:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Anchor.md',
    payment_details: '13u5klgrt4n1smc78zxtyvedgp1u1lygaahtpftvcv6z1btr (usdt)',
    md_content:
      '# Anchor, On-chain Linked List pallet and Name Service\n\n- **Team Name:** Fuu\n- **Payment Address:** 13u5kLGrt4n1Smc78ZXtYVedgp1U1LyGAAHtPFtVcv6Z1BtR (USDT)\n- **[Level](https://github.com/w3f/Grants-Program/tree/master#level_slider-levels):** 1\n\n\n## Project Overview :page_facing_up:\n\n### Overview\n\n- Anchor is a on-chain linked list system base on substrate 3.0.0. It is used to support cApp ( Chain Application ) development. On another hand, Anchor can alse be treated as Name Service or on-chain key-value storage system.\n\n- Anchor is a isolated substrate pallet. It is currently used in the application of freeSaying. It can provide flexible data structure on the chain and handle complex logic without upgrading the substrate node itself.\nYou can access the [freeSaying ( Only applicable to mobile )](https://freesaying.net) demo to know well. Anchor network is the very important basic storage system. Anchor.js is a isolate JS library to access Anchor network, can read and write data easily.\nAnchor pallet is a part of EasyPolka, the relationship as follow :\n\n![easypolka.png](http://android.im/anchor/easypolka.png)\n\nQR to access to freesaying.net.\n![easypolka.png](http://android.im/anchor/qr.png)\n\n- With Anchor, you can use run a substate network just need a bit upgrade. Through the highly customizable data structure and the ability of cApp, the threshold of application development on the chain is greatly reduced. It means that new developers who even does not know blockchain well can build cApp just by Javascript and publish it nearly free.\n\n- As a web developer, I firmly believe in the future of blockchain technology, but when I turn to blockchain development, I encounter a huge threshold. It takes a lot of time to get familiar with both language and various concepts. At the same time, technology is still improving, and a stable development environment cannot be obtained. All of these prompted me to improve EasyPolka for my own development.\nSo far, only one person myself can develop complex cApp ( on-chain applications ). I believe that this can help other developers to build cApps more efficiently.\nWill try to apply the left part, it is a bit complex, I am working on regrouping them now. The image show the whole structure.\n\n![easypolka.png](http://android.im/anchor/easypolka_not.png)\n\n### Project Details\n\n- Anchor development itself has been done, and it is deployed here [check "wss://dev.metanchor.net" on polkadot.js.org](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fdev.metanchor.net#/explorer). One cApp is deployed to test too, the URL is [https://freesaying.net](https://freesaying.net). This React project load the target Anchor "freeSaying" from dev.metanchor.net, then run the cApp which is a socail media application.\n\n- There are 4 methods and 2 stores to implement the on-chain linked list function in Anchor pallet.\n\n- Substrate 3.0.0 and Rust for Anchor pallet. Javascript for anchor.js.\n\n- Code here [https://github.com/ff13dfly/Anchor](https://github.com/ff13dfly/Anchor), the document is the next step.\n\n- Treat Anchor as Name Service, there is no available pallet can be use. Have checked here [Open Source Polkadot Stack](https://wiki.polkadot.network/docs/build-open-source).\n![easypolka.png](http://android.im/anchor/status.png)\n\n- The function of Anchor has been finalized and will not be further expanded on substrate side. The function of the current version is the final form.\n\n### Ecosystem Fit\n\n- An available Name Services on Substrate 3.0.0, and it is extended to a On-chain Linked List system.\n\n- Developers who have not yet used substrate/Polkadot. Developers who do not like Smart Contract way to develop application.\n\n- Developer can build application flexibly without understanding the whole blockchain system. I think this is attractive to many developers.\n\n- From the [Open Source Polkadot Stack](https://wiki.polkadot.network/docs/build-open-source), there are 4 Name Service pallets, 2 red ( can not compatible to substrate 3.0.0 ) and 2 yellow ( code not updated more than 2 months by checking github ).\n\n## Team :busts_in_silhouette:\n\n### Team members\n\n- Zhongqiang Fu, individual developer.\n\n### Contact\n\n- **Contact Name:** Zhongqiang Fu\n- **Contact Email:** ff13dfly@163.com\n- **Website:** https://github.com/ff13dfly/\n\n### Legal Structure\n\n- Individual\n\n### Team\'s experience\n\n- On substrate, Substrate with Anchor pallet has been build successful and run at [wss:dev.metanchor.net](wss:dev.metanchor.net). I have tried to load a three nodes network successful.\n\n### Team Code Repos\n\n- https://github.com/ff13dfly/\n- https://github.com/ff13dfly/Anchor\n\n### Team LinkedIn Profiles (if available)\n\n## Development Status :open_book:\n\n- Demo cApp [freeSaying](https://android.im/vManager/) is published now. The test network is available, you can access [wss:dev.metanchor.net](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fdev.metanchor.net#/explorer). Anchor pallet functions have been developed, but not tested entirely.\n\n## Development Roadmap :nut_and_bolt:\n\n### Anchor pallet\n\n- There are 4 methods exposed. One for setting data, Three for trading anchor.\n  ![easypolka.png](http://android.im/anchor/methods.png)\n  1. setAnchor, set Anchor data method.\n\n    ```RUST\n    pub fn set_anchor(\n      origin: OriginFor<T>,   //default\n      key: Vec<u8>,           //Anchor name\n      raw: Vec<u8>,           //raw data to storage\n      protocol: Vec<u8>,      //data protocol, used to decide how to decode raw data\n      pre:T::BlockNumber      //the previous block number which storage anchor data\n    ) -> DispatchResult {\n      // code here.\n      Ok(())\n    }\n    ```\n\n  2. sellAnchor, sell your Anchor publish or to target account.\n\n    ```RUST\n    pub fn sell_anchor(\n      origin: OriginFor<T>,   //default\n      key: Vec<u8>,           //Anchor name\n      cost: u32,              //unit accuracy\n      target:<T::Lookup as StaticLookup>::Source  //target buyer SS58 address. If the same as owner, can be sold to anyone.\n    ) -> DispatchResult {\n      // code here.\n      Ok(())\n    }\n    ```\n\n  3. unsellAnchor, revoke Anchor sell status.\n\n  ```RUST\n    pub fn unsell_anchor(\n      origin: OriginFor<T>,   //default\n      key: Vec<u8>,           //Anchor name\n    ) -> DispatchResult {\n      // code here.\n      Ok(())\n    }\n  ```\n\n  4. buyAnchor, buy target Anchor which is on sell.\n\n  ```RUST\n    pub fn buy_anchor(\n      origin: OriginFor<T>,    //default\n      key: Vec<u8>,            //Anchor name\n    ) -> DispatchResult {\n      // code here.\n      Ok(())\n    }\n  ```\n\n- There are two Runtime Storage. One for the anchor data status, one for the on-sell list.\n  ![easypolka.png](http://android.im/anchor/storage.png)\n  ```RUST\n    // (T::AccountId,T::BlockNumber)\n    //  T::AccountId, the anchor owner ss58 address\n    //  T::BlockNumber, last block number when updated data successfully.\n    pub(super) type AnchorOwner<T: Config> = StorageMap<_, Twox64Concat, Vec<u8>, (T::AccountId,T::BlockNumber)>;\n\n    // (T::AccountId, u32,T::AccountId)\n    // T::AccountId, the anchor owner ss58 address\n    // u32, the sell price for the anchor\n    // T::AccountId, the target buyer. If the same as owner, it is free to buy.\n    pub(super) type SellList<T: Config> = StorageMap<_, Twox64Concat, Vec<u8>, (T::AccountId, u32,T::AccountId)>;\n  ```\n\n### anchor.js\n\n- exposed methods. Three parts : basic substrate functions, anchor data I/O functions, anchor exchange functions. It has been used in the demo freeSaying, but no isolated yet. And exchange part need to code this time.\nAnchor.js can help developer accessing Anchor network by this single JS.\n\n  ```JS\n    /*******************************/\n    /* substrate related functions */\n    /*******************************/\n\n    //link to target substrate node\n    exports.link=function(endpoint,callback){\n      /* return callback && callback(PolkadotJS.API) */\n    };\n\n    //load encry file to get pair\n    exports.load=function(file,password,callback){\n      /* return callback && callback(pair) */\n    };\n\n    //subcribe the latest block\n    exports.subcribe=function(callback){\n      /* return callback && callback(anchorDataList) */\n    };\n\n    //check account balance\n    exports.balance=function(ss58Address,callback){\n      /* return callback && callback(amount) */\n    },\n    \n    /***********************************/\n    /* Anchor pallet related functions */\n    /***********************************/\n\n    /* data part */\n    //get the latest anchor data\n    exports.latest=function(anchor,callback){\n      /* return callback && callback(formattedAnchorData) */\n    };\n\n    //get the anchor data on special block.\n    exports.target=function(anchor,block,callback){\n      /* return callback && callback(formattedAnchorData) */\n    };\n\n    //get the list data of anchor.\n    exports.history=function(anchor,callback,limit){\n      /* return callback && callback(listofAnchorsData) */\n    };\n\n    //set target Anchor data.\n    exports.write=function(pair,anchor,raw,protocol,callback){\n      /* return callback && callback(toChainProcessStatus) */\n    };\n\n    /* market part */\n    //set Anchor status to sell.\n    exports.sell=function(pair,anchor,cost,target,callback){\n      /* return callback && callback(true/false) */\n    };\n\n    //buy anchor on sell.\n    exports.buy=function(pair,anchor,callback){\n      /* return callback && callback(true/false) */\n    };\n\n    //revoke anchor from selling.\n    exports.unsell=function(pair,anchor,callback){\n      /* return callback && callback(true/false) */\n    };\n  ```\n\n### Overview\n\n- **Total Estimated Duration:** 1 month\n- **Full-Time Equivalent (FTE):**  1\n- **Total Costs:** 6,000 USDT\n\n### Milestone 1 — Anchor pallet testing & documents, anchor.js full function\n\n- **Estimated duration:** 1 month\n- **FTE:**  1\n- **Costs:** 6,000 USDT\n\n| Number | Deliverable | Specification |\n| -----: | ----------- | ------------- |\n| 0a. | License | Apache 2.0 / GPLv3 |\n| 0b. | Documentation | We will provide both **inline documentation** of the code and a basic **tutorial** that explains how a user can (for example) spin up one of our Substrate nodes and send test transactions, which will show how the new functionality works. |\n| 0c. | Testing Guide | Core functions will be fully covered by unit tests to ensure functionality and robustness. In the guide, we will describe how to run these tests. On anchor.js, will supply demo to test. |\n| 0d. | Docker | We will provide a Dockerfile(s) that can be used to test all the functionality delivered with this milestone. I am not so fimilar with Docker, that will take a bit long time. |\n| 0e. | Anchor pallet | Will fix if neccessary. Mainly testing this time. |\n| 0f. | anchor.js | A demo with all functions will be developed by React |\n\n## Future Plans\n\n- Anchor is the data storage part of EasyPolka, it is the most important component. Next, the whole EasyPolka will be open source. At present, it includes the following contents.\n\n| Order | Name | Demo | Github | introduction |\n| -----: | ----------- | ------------- | ------------- | ------------- |\n| 1 | Anchor | wss://dev.metanchor.net | [https://github.com/ff13dfly/Anchor](https://github.com/ff13dfly/Anchor) | Linked list on chian & Name service |\n| 2 | Saying | [https://freesay.net](https://freesay.net) | Not yet | Plinth for cApp |\n| 3 | cSaying | on block 2,220 | Not yet | FreeSaying cApp , pure JS app |\n| 4 | vGateway | [https://android.im/vGateway/](https://android.im/vGateway/) | Not yet | Gateway access to vServices |\n| 5 | vManager | [https://android.im/vManager/](https://android.im/vManager/) | Not yet | Management portal for vServices |\n| 6 | vHistory | No domain, node.js app | Not yet |Anchor cache vService |\n| 7 | vSaying | No domain, node.js app | Not yet] | FreeSaying comment vService |\n| 8 | vMarket | No domain, node.js app | Not yet | Free charge vService |\n| 9 | vMix | No domain, node.js app | Not yet | Front mixer vService |\n| 10 | vSocial | No domain, node.js app | Not yet | Fav & tread vService |\n\n![easypolka.png](http://android.im/anchor/easypolka_not.png)\n\n- The functions above, you can test on the cApp [freeSaying](https://freesaying.net).\nIt is not very stable to access Github here, so the left codes are on my private git server.\n\n- The whole EasyPolka framework works properly, but still so many details to fix and neccesary function to add.\n\n## Additional Information :heavy_plus_sign:\n\n**How did you hear about the Grants Program?** Web3 Foundation Website.\n\n- Demo cApp [freeSaying](https://android.im/vManager/) is published now. The test network is available, you can access [wss:dev.metanchor.net](wss:dev.metanchor.net).\n\n- I have tried twice to apply the Gant Application but not accepted.\n  Anchor, a key-value storage system for substate. Now, it is extended, and applying again, :-)\n  SimPolk, simulator of Polkadot.\n',
    md_link:
      'https://raw.githubusercontent.com/shaurya-ATR940/Grants-Program_dummy/master/applications/Anchor.md',
    project_name: 'anchor, on-chain linked list pallet and name service',
    status: 'active',
    total_cost: {
      amount: '6000',
      currency: 'usdt'
    },
    total_duration: '1 month',
    team_id: '36fd4966-474b-4f2b-85bf-83861879a8ac',
    level: '1',
    legal_structure: {
      registered_address: '',
      registered_legal_entity: ''
    },
    milestones: ['7b60be90-cbdb-4725-aba4-c317c8a450ed'],
    totalMilestones: 1,
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5ae1d'
    },
    id: '81c811f6-55b7-4296-8de6-79a738cf626c',
    user_github_id: null,
    file_name: 'apron_network.md',
    start_date: {
      $date: '2020-11-26T08:13:40.000Z'
    },
    html_url:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Apron_Network.md',
    payment_details: '15tv6rqswngwq1z5pim2yjmellvwnm5d4v',
    md_content:
      "# Apron Network\n\n* **Team Name:** Apron Labs\n* **Payment Address:** 15tV6rQSwNgWQ1Z5pim2yJmELLvWNm5D4V\n\n## Project Overview :page_facing_up:\n\n### Overview\n\n#### Introduction\n\nThe Apron Network's vision is to be the entry point of the Web3 World in the future. The goal of the Apron Network is to create the decentralized infrastructure for all the developers who want to build applications on top of the blockchain, the service providers who are running nodes for blockchain, and the users who are using applications based on blockchain.\n\nThe blockchain infrastructure services are provided by seldom centralized service providers. Those service providers are commercial companies and earn profit by providing these services. In general speaking, there is no problem with such a business model that commercial companies provide infrastructure services and get paid by developers or users in the past ages. But NOT NOW. The main feature of blockchain is decentralization, while all the blockchain infrastructure services are built and maintained by commercial companies, and those systems are centralized, which is against the decentralization of blockchain. There is a potential issue of such a business model that the service providers can steal the blockchain from the community by manipulating the API accesses through their infrastructure services. Once the service providers manipulate the API accesses, there is no real blockchain anymore.\n\nMaybe you are still thinking that it sounds terrible but no one can prove it. Let's see the recent accident of infura.io. Almost all of the blockchain applications mainly rely on the API services from infura.io, but none of the builders of blockchain applications can imagine what will happen if infura.io manipulates the API services. Hopefully, infura.io worth our trust according to past services, and there is no manipulation found yet.\n\n**On Nov. 11th, 2020, the API services from infura.io are down, and the idea of Apron Network comes out.**\n\nThe Apron Network is built by the Apron Labs powered by Substrate. It provides a Cross-chain Decentralized Infrastructure Services Network that will be used by blockchain node runners, DApp developers, the public chain community, and DApp users. Every DApp developer can discover the proper service provider for a specific blockchain through the decentralized infrastructure market on the Apron Network. The Apron Network can be run as a parachain of Polkadot.\n\nWith the Apron Network,  the DApp developers can find their API endpoint, node runners can provide infrastructure services to get profit and all the infrastructure services will be decentralized on the two-layers infrastructure service network. The Apron Network will guaranty there is no infura.io accident anymore!\n\n#### Integration\n\nThe Apron Network can be run as a parachain on Polkadot, or an independent chain. The Apron Network contains Apron Node and Apron Market. The Apron Node is built with Substrate 2.0 Framework, and the OCW (Off-chain worker) will be included for API manage records. Apron Market consists of Apron Market Contracts and Apron Market Front End. The contracts will be implemented with Ink!, and the front-end will be built with polkadot.js.\n\n#### Team Interest\n\nMost of the team members are DApp developers who suffer from the lacking of Ethereum API Endpoint and tightly rely on infura.io since we are not able to set up our full node due to funds. As we have known, most of the DApp developers have the same embarrassing situation as us. After shocked by the accident of infura.io, we are willing to build a decentralized infrastructure service network, and we name it the Apron Network.\n\nWith Substrate 2.0 Framework, we are able to build a customized blockchain network easily, and we have the ability to integrate an API Gateway to manage blockchain API services in Apron Node. With the Apron Network, the blockchain node runners can provide Infrastructure service easily and get profit through this decentralized infrastructure services network.\n\n### Project Details\n\n#### Architecture  \n\nThe Apron Network consists of **Apron Node**, **Arpon Market Contracts**, **Decentralized API Market**, and the **Apron SDK**.\n\n![img](https://raw.githubusercontent.com/Apron2050/graphics/main/Apron%20Architecture.jpg)\n\n* The Apron Node is the customized chain node for the Apron network built with Substrate 2.0. Besides blockchain-related features, it contains the full features of an API Gateway in the early versions. In future versions, more infrastructure features will be added. It should be run together with the blockchain node and operate by blockchain node runners. For example,  the owner of the Ethereum Full node can set up an Apron Node to interact with his Ethereum Full node through RPC, then the DApp developer can retrieve the information of his Apron Node from the Apron Network, and call the API like calling an API with infura.io.\n* The Apron Market Contracts manage the API services information, the registration of API services, the registration of API users, and the billing of API usage. All the API information is stored in these contracts. The billing feature is implemented,  the API users have to pay **$ANT** to use these APIs and the API owners will get paid by **$ANT**. Everything is done through smart contracts. **$ANT** is the native token in Apron Network.\n* Decentralized API Market lists all the API services registered and available for developers from the data in smart contracts. DApp developers search the API services according to their needs and choose the one with the proper price.\n* The Apron SDK makes the use of Apron Network easier. DApp developers can integrate this SDK in their app to dynamic switch blockchain entry-point according to their needs.\n\n#### Substrate / Polkadot Integration\n\nThe Apron Network can be run as a para-chain of Polkadot, and also can be run as an independent chain apart from Polkadot.\n\nThe whole network is built on top of the Substate 2.0 Framework, and OCW (off-chain worker) is used to report API usage statistics on which the billing relies.\n\nAll the contracts will be implemented with Ink!, and the front-end of Decentralized API Market will be on top of polkadot.js.\n\n#### Scenarios\n\n* Node Runners  \n\n![img](https://raw.githubusercontent.com/Apron2050/graphics/main/Apron%20Node.jpg)\n\nThe above figure shows the role of each component act from the view of the blockchain node owner. To simply the scenario, we take an example. The para-chain node is running at the beginning, the Apron Node shown above is set up by the owner by staking some **$ANT**, and the Apron Node is accessible on the internet. The owner can configure Apron Node with the RPC entry point of the para-chain node, API access frequency, API access fee, and other limitations. After everything is configured, the Apron Node will be able to call the RPC interface of para-chain, and DApps will call the API through the Apron Node. The Apron Node calculates the API usage statistics of each caller, then stores this data through OCW (off-chain worker) on the chain for further billing.\n\n* DApp Developers  \n\n![img](https://raw.githubusercontent.com/Apron2050/graphics/main/Apron%20Usage.jpg)\n\nFor DApp developers, there are two components that will be used. One is the Decentralized API Market, the other one is the Apron SDK. Firstly, DApp developers search the API services in the API service repositories ( which is part of the Decentralized API Market) on the webpage. After finding the proper API service, the DApp developer will generate an API access key with the help of Apron Market Contracts. Finally, the DApp developer develops the DApp with the API access key to use the related API services. Of course, the DApp developer should pay the fee of using the API services according to the fee addressed by the API service provider.\n\n#### Interface Specification\n\nThe function provided by the pallet to report API usage statistics data is reportAPIUsage.\n\n```\n1. reportAPIUsage\n\n- desc: Report the API usage statistics from API Gateway data.\n- params: API Key\n- return: the calls number\n```\n\n### Ecosystem Fit\n\nInfura.io is the typical infrastructure services provider that is totally centralized.\n\nThe Apron Network provides exactly the same API services as infura.io but in a decentralized way, thanks to Substrate 2.0 Framework which let us only focused on the logic on top of blockchain rather than re-develop a new blockchain. In the future, the Apron Network will provide a decentralized infrastructure services network.\n\n## Team :busts_in_silhouette:\n\n### Team members\n\n* Toney - CTO/Project Lead  \n* Junjun - Full-stack Developer  \n\n### Contact\n\n- <https://apron.network>\n\n### Legal Structure\n\nNo Legal Entity\n\n### Team's experience\n\nToney\n\n* Over 13 years of experiences in Software Development\n* Software Engineer in MS\n* Mobile Game Developer  \n* Blockchain Game Developer  \n* The Chief Tech Officier of the team which wins TRON Accelerator 2018 Game Rewards  \n\nJunjun\n\n* Over 15 years of experiences in Software Development\n* Former Senior Software Engineer in Lucent\n* DApp Developer  \n* Full-stack Developer\n\n### Team Code Repos\n\n* Apron Labs: <https://github.com/apron-network>\n\n### Team LinkedIn Profiles\n\n* [Toney](https://www.linkedin.com/in/yi-sui-297a9223/)\n\n## Development Roadmap :nut_and_bolt:\n\n### Overview\n\n* **Total Estimated Duration:** 3 months\n* **Full-time equivalent (FTE):** 4\n* **Total Costs:** 0.73 BTC\n\n### Milestone 1 Example — Implement Substrate Modules\n\n* **Estimated Duration:** 3 months\n* **Full-time Equivalent (FTE):** 4\n* **Costs:** 0.73 BTC\n\nIn the first milestone, the features for the PoC will be implemented and tested by limited users.\n\nThe following components will be included:\n\n* Apron Node  \n* Apron Market Contracts  \n* Decentralized API Market / Front End\n* Apron SDK\n\n| Number | Deliverable | Specification |\n| ------------- | ------------- | ------------- |\n| 0a. | License | Apache 2.0 |\n| 0b. | Documentation | The documentation will be provided to show the whole achitecture of the Apron Network. |\n| 0c. | Testing Guide | The testing guide will be provided to test each component. |\n| 1. | Apron Node Repo | We will create a customized chain node with Substrate 2.0 Framework, it will contains the OCW module to report API usage statistics on-chain. |\n| 2. | Apron Market Contracts Repo | The contracts will be implemented with Ink!, and it will handle all the API services related functions such as 1) Staking tokens to register API service for node runner, 2) Register and unregister API service for node runner, 3) Define the price of API service for node runner, 4) Apply API service access key for node runner and DApp developers, 5) Billing System of the API usage for node runner and DApp developers, 6)Interface to integrate with a DAO to solve dispute between node runner and DApp developer|\n| 3. | Decentralized API Market / Front End Repo | It's a webpage working with Arpon Network, it's implemented based on polkadot.js as planned. |\n| 4. | Docker | We will provide a dockerfile to demonstrate the full functionality of our chain |\n| 5. | Tutorial | We will write an tutorial about how to use Apron Network. |\n| 6. | Article | We will write an article published on media channels. |\n| 7. | DAO | A Apron DAO will be created to handle the governance of the Decentralized API Market. |\n\n## Future Plans\n\nCommunity Plan\n\n* Hire 3 more developers.  \n* Hire 1 marketing adviser.  \n* Recruit more contributors involved in our project.  \n* Join Polkadot related events.  \n* Bounty Program.  \n* Publish articles on media channels to expose the Apron Network.  \n\nDevelopment Plan\n\n* The Apron Network will run as a parachain of the Kusama.  \n* Support Kusama Node.  \n* In phase 1, our goal is to achieve all the designed functions.  \n* In phase 2, improve the stability of the Apron Network.\n* In phase 3, provide decentralized quick node services.\n* Finally, our goal is to provide the infrastructure services network.\n\n## Additional Information :heavy_plus_sign:\n\nCurrently we just start the first design of the Apron Network.\n\nThe project repo: <https://github.com/apron-network>\n",
    md_link:
      'https://raw.githubusercontent.com/shaurya-ATR940/Grants-Program_dummy/master/applications/Apron_Network.md',
    project_name: 'apron network',
    status: 'active',
    total_cost: {
      amount: '0.73',
      currency: 'btc'
    },
    total_duration: '3 months',
    team_id: '7d8a38a3-c620-49e7-b447-9a0dcceef7b1',
    level: '3',
    legal_structure: {
      registered_address: '',
      registered_legal_entity: ''
    },
    milestones: [],
    totalMilestones: 1,
    __v: 0
  }
];

export const MILESTONES: any[] = [
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e0'
    },
    id: '8f276a33-a8e3-4cb2-9d4a-24da91724407',
    file_name: 'admeta_milestone_1.md',
    project_id: 'b7e15891-7d4b-4218-869b-e0da32191a6e',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/AdMeta.md',
    md_content:
      '# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/AdMeta.md\n* **Milestone Number:** 1\n\n\n**Deliverables**\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 0a. | License | [LICENSE](https://github.com/AdMetaNetwork/admeta/blob/main/LICENSE) | GPLv3 |\n| 0b. | Documentation | [Rust Docs](https://admetanetwork.github.io/admeta/), [AdMeta Documentation](https://docs.admeta.network/)| Rust docs are generated from the inline documentation, which can be also found in the source code. AdMeta documentation provides a guide to build and set up an AdMeta test network, and also there is a step-to-step guide for the AdMeta WebApp. | \n| 0c.  | Testing Guide\t| [Build and Test](https://github.com/AdMetaNetwork/admeta#getting-started), [Test Results in CI](https://github.com/AdMetaNetwork/admeta/actions/workflows/rust.yml), [WebApp Guide](https://docs.admeta.network/guides/how-to-use-admeta-webapp) | In the README we described a build and unit test guide of AdMeta node. Also, unit test execution is integrated in CI. For a functional related test, the most convenient way is to use our WebApp by following the WebApp guide provided.  |\n| 0d. | Docker | [Docker Image](https://hub.docker.com/repository/docker/h4n00/admeta) | |\n| 0e. | Article | [Introduce AdMeta](https://medium.com/@admeta/admeta-an-internet-advertising-revolution-cee26f3421e7) ||\n| 1. | Substrate module: ad\t| https://github.com/AdMetaNetwork/admeta/tree/d133bce5adaa41dc2acffa8f10b63928d22751b4/pallets/ad |  |\n| 2. | Substrate module: user mock\t| https://github.com/AdMetaNetwork/admeta/tree/d133bce5adaa41dc2acffa8f10b63928d22751b4/pallets/user | |\n| 3. | Substrate solo chain\t| https://github.com/AdMetaNetwork/admeta/tree/d133bce5adaa41dc2acffa8f10b63928d22751b4/node https://github.com/AdMetaNetwork/admeta/tree/d133bce5adaa41dc2acffa8f10b63928d22751b4/runtime | |\n| 4. | AdMeta WebApp | https://github.com/AdMetaNetwork/admeta-webapp/tree/cb198db390708e47b1a3fce2b36769d01509e890 | |\n\n\n\n\n**Additional Information**\n\nPlease note that the deployed Webapp https://app.testnet.admeta.network/ is based on the latest version, while the provided code commit is from an older version. There could be inconsistency between these two versions.\n\n',
    status: 'complete',
    cost: '12,000 usd',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e1'
    },
    id: '60d52d97-00cd-41a4-831b-802fbb6962b1',
    file_name: 'Afloat_Milestone1.md',
    project_id: '07c49e56-9a1e-444c-9a5b-a65d723ba757',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Afloat.md',
    md_content:
      "# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone, and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/Afloat.md\n* **Milestone Number:** 1\n\n**Context** (optional)\n\nRegarding the user onboarding and KYC process, we anticipated using the identity pallet to store crucial information, however, modifying the user identity causes the current judgments to be reset. Therefore we opted for storing the necessary information (which results from a developed privacy solution) within a custom pallet storage, along with some other items to describe pivotal data relations to keep it more persistant.\n\nA running instance of the code can be found [here](http://34.107.153.230/)\n\n**Deliverables**\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 0a. | License | https://github.com/hashed-io/hashed-substrate/blob/main/LICENSE | MIT |\n| 0b. | Documentation | https://github.com/hashed-io/hashed-marketplaces-ui <br> https://github.com/hashed-io/hashed-substrate<br>  https://github.com/hashed-io/hashed-private-server <br> https://github.com/hashed-io/hashed-private-client-api | The code has inline documentation and each repository has a detailed README with build, run, and test instructions. |\n| 0c. | Testing | https://github.com/hashed-io/hashed-substrate/blob/main/pallets/gated-marketplace/src/tests.rs | The test is built directly into the Rust project |\n| 0d. | Video | [English](https://drive.google.com/file/d/1Gzz1scZt4LSBPrQ30XXZzclhAXjjdUHJ/view?usp=sharing) and [Spanish](https://drive.google.com/file/d/12HGvMEMDU5NMRXcEa8m3gkuqjwO3iONV/view?usp=sharing) versions | 14 minute video demonstrating the deliverables |\n| 0e. | Article | [English](https://docs.google.com/document/d/1bDswb619nkdL0xt41GEJEtyLcCOc3LO-M-dB2RdDr9s/edit?usp=sharing) and [Spanish](https://docs.google.com/document/d/1DNHgONQrZfpG4f0f79n6pS9h9jUQQDW52OlWCw1TiJA/edit?usp=sharing) versions | Afloat's and general use case of gated Marketplaces |\n| 1. | Set Profile and Upload KYC Materials | https://github.com/hashed-io/hashed-private-server https://github.com/hashed-io/hashed-private-client-api  | Users can upload files visible to themselves, a custodian, and the Marketplace owner. Covered in the video. |\n| 2. | KYC Admin | https://github.com/hashed-io/hashed-marketplaces-ui https://github.com/hashed-io/hashed-substrate | Marketplace owner can approve an applicant. Covered in Video.|\n| 3. | Slides | https://drive.google.com/file/d/1_YgnWkFoFXhjG1XdSFGa1F_Vbz1HkwA8/view?usp=sharing | Presentation slides used by Louise W. Reed at CPA conferences to address why Afloat sees value in the Polkadot’s ecosystem| \n\n**Repositories** \n(all MIT licensed)\n| Component | Repo | Language |\n| -----: | ----------- | ------- |\n| Marketplace UI | https://github.com/hashed-io/hashed-marketplaces-ui | Quasar/Vue |\n| Marketplace pallets | https://github.com/hashed-io/hashed-substrate | Rust |\n| Confidential Documents Server | https://github.com/hashed-io/hashed-private-server | Javascript |\n| Confidential Documents API | https://github.com/hashed-io/hashed-private-client-api | Javascript |\n\n\n\n**Additional Information**\n\nWe will create more extensive and polished end-user documentation as we continue delivering the Milestones.\n",
    status: 'complete',
    cost: '17,675 usd',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e2'
    },
    id: 'de0e0a1d-e27a-4d76-8c3b-5a1cb25b4dae',
    file_name: 'Afloat_Milestone2.md',
    project_id: '07c49e56-9a1e-444c-9a5b-a65d723ba757',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Afloat.md',
    md_content:
      "# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone, and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/Afloat.md\n* **Milestone Number:** 2\n\n**Context** (optional)\n\nA running instance of the code can be found [here](https://hashed-portal-dev.hashed.systems/login)\n\n**Deliverables**\n\n| Number | Deliverable | Link | Notes |\n| -----: | ----------- | ------------- | ------------------- |\n| 0a. | License | https://github.com/hashed-io/hashed-substrate/blob/main/LICENSE | MIT |\n| 0b. | Documentation | https://github.com/hashed-io/hashed-marketplaces-ui <br> https://github.com/hashed-io/hashed-substrate<br>  https://github.com/hashed-io/hashed-private-server <br> https://github.com/hashed-io/hashed-private-client-api | The code has inline documentation and each repository has a detailed README with build, run, and test instructions. |\n| 0c. | Testing | [Github repository](https://github.com/hashed-io/hashed-substrate/blob/main/pallets/gated-marketplace/src/tests.rs) | The test is built directly into the Rust project |\n| 0d. | Video | [Video](https://drive.google.com/file/d/1tpmsaml4RmKbPb2PB5D0_32y_NcVDSZ7/view?usp=share_link) | 8 minute video demonstrating the deliverables |\n| 0e. | Article | [English](https://docs.google.com/document/d/1bDswb619nkdL0xt41GEJEtyLcCOc3LO-M-dB2RdDr9s/edit?usp=sharing) and [Spanish](https://docs.google.com/document/d/1DNHgONQrZfpG4f0f79n6pS9h9jUQQDW52OlWCw1TiJA/edit?usp=sharing) versions | Afloat's and general use case of gated Marketplaces |\n| 1. | Originate Tax Credit | [JS library](https://github.com/hashed-io/afloat-client-api/blob/master/src/model/polkadot-pallets/afloatApi.js#L34) [Pallet](https://github.com/hashed-io/hashed-substrate/blob/develop/pallets/fruniques/src/lib.rs#L177) | This video provides a demonstration and explainer for how new tax credit NFTs are being originated: [Youtube Video](https://youtu.be/dpFk2d0UXYc) | \n| 2. | Upload Confidential Documents | [Video](https://drive.google.com/file/d/1yvCiuJ7P5xTPtTwCLZyNWCSez4NBUGfP/view?usp=sharing) showing NFT functionality specific to the tax credits implementation [JS library](https://github.com/hashed-io/hashed-confidential-docs-client-api/blob/015b59837eb8c0117fecb0c6323053d605a6f5fd/src/model/OwnedData.js#L57) | This feature allows for NFT originators to upload encrypted files attached to tax credits. The files will be accessible only by the user and the application administrator. This is also explained in the [video](https://youtu.be/dpFk2d0UXYc) | \n| 3. | Tax Credit verification | An example of state tax credit verification is shown in the [video](https://drive.google.com/file/d/1yvCiuJ7P5xTPtTwCLZyNWCSez4NBUGfP/view?usp=sharing) from the previous point of this deliverable (2.) at 4m12s | This shows a tax credit verification at the state level. Other verifications can be configured. |\n| 4. | List for Sale | [Enlist NFT for sale](https://github.com/hashed-io/hashed-substrate/blob/00135e71f7bed81cf9f8dbd902b989bd19393f7e/pallets/gated-marketplace/src/lib.rs#L549) | Ability for Tax Credit (NFT) owners to assign a price and list it for sale.| \n\n**Repositories** \n(all MIT licensed)\n| Component | Repo | Language |\n| -----: | ----------- | ------- |\n| Afloat Client API | https://github.com/hashed-io/afloat-client-api | Javascript |\n| Marketplace UI | https://github.com/hashed-io/hashed-network-portal-ui | Quasar/Vue |\n| Marketplace pallets | https://github.com/hashed-io/hashed-substrate/tree/develop/pallets/gated-marketplace | Rust |\n| Confidential Documents Server | https://github.com/hashed-io/hashed-private-server | Javascript |\n| Confidential Documents API | https://github.com/hashed-io/hashed-confidential-docs-client-api | Javascript |\n\n\n\n**Additional Information**\n\n\n",
    status: 'complete',
    cost: '14,140 usd',
    milestoneNo: 2,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e3'
    },
    id: 'b08b19c8-4b1a-4686-b548-57c955e78fff',
    file_name: 'Afloat_Milestone3.md',
    project_id: '07c49e56-9a1e-444c-9a5b-a65d723ba757',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Afloat.md',
    md_content:
      "<!-- @format -->\n\n# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone, and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/milestone-deliverables-guidelines.md).**\n\n- **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/Afloat.md\n- **Milestone Number:** 3\n\n**Context** (optional)\n\nThis is the third milestone of Afloat's grant. It covers ordering fractional tax credits, confirming and settling the order.\n\nA running instance of the code can be found [here](https://hashed-portal-dev.hashed.systems/login)\n\n**Deliverables**\n\n| Number | Deliverable            | Link                                                                                                                                                                                                                                                                                                                                                                                                                      | Notes                                                                                                               |\n| -----: | ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- |\n|    0a. | License                | https://github.com/hashed-io/hashed-substrate/blob/main/LICENSE                                                                                                                                                                                                                                                                                                                                                           | MIT                                                                                                                 |\n|    0b. | Documentation          | https://github.com/hashed-io/hashed-marketplaces-ui <br> https://github.com/hashed-io/hashed-substrate <br>[Marketplace](https://github.com/hashed-io/hashed-substrate/tree/main/pallets/gated-marketplace)<br> [Fruniques](https://github.com/hashed-io/hashed-substrate/tree/main/pallets/fruniques)<br> https://github.com/hashed-io/hashed-private-server <br> https://github.com/hashed-io/hashed-private-client-api | The code has inline documentation and each repository has a detailed README with build, run, and test instructions. |\n|    0c. | Testing                | [Github repository](https://github.com/hashed-io/hashed-substrate/blob/main/pallets/gated-marketplace/src/tests.rs)                                                                                                                                                                                                                                                                                                       | The test is built directly into the Rust project                                                                    |\n|    0d. | Video                  | [English](https://drive.google.com/file/d/1YtlNNsmhpxzKgVTLbaMXC7unRzfVLNbE/view?usp=share_link) and [Spanish](https://drive.google.com/file/d/1D9LQ2KCDVWGbuTZ7_Oo-QYvOqNg9PUH3/view?usp=share_link) versions                                                                                                                                                                                                            | English and Spanish videos explaining the functionality on this Milestone, as well as some details on how to run it.                                                                                                                 |\n|    0e. | Article                | [English](https://docs.google.com/document/d/1clgBMWQQXGqZd6p7P7CmZwEo0YaM5WRMZLISOn3FuNI/edit?usp=sharing) and [Spanish](https://docs.google.com/document/d/1AB-2sKU8GHO-yLZOQ-sn0MOlsCABPXG6gfRG61BtRXc/edit?usp=sharing) versions                                                                                                                                                                                      | English and Spanish articles explaining the math of the fractional NFTs and the business advatanges                                                                                                                 |\n|     1. | Order Part of an NFT   | [Gated Markeplace business documentation.](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#order-part-of-an-nft) The code can be found in the repositories on the last section.                                                                                                                                                                                                                                                                             |                                                                                                                     |\n|     2. | Complete/Confirm Order | [Gated Markeplace business documentation.](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#completeconfirm-order) The code can be found in the repositories on the last section.                                                                                                                                                                                                                                                                                  |                                                                                                                     |                                                                                                                     |\n|     3. | Order Settlement       | [Gated Markeplace business documentation.](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#order-settlement) The code can be found in the repositories on the last section.                                                                                                                                                                                                                                                                                  |                                                                                                                     |                                                                                                                     |\n\n**Repositories**\n(all MIT licensed)\n| Component | Repo | Language |\n| -----: | ----------- | ------- |\n| Afloat Client API | https://github.com/hashed-io/afloat-client-api | Javascript |\n| Marketplace UI | https://github.com/hashed-io/hashed-network-portal-ui | Quasar/Vue |\n| Marketplace pallet | https://github.com/hashed-io/hashed-substrate/tree/develop/pallets/gated-marketplace | Rust |\n| Fruniques pallet | https://github.com/hashed-io/hashed-substrate/tree/develop/pallets/fruniques | Rust |\n| Confidential Documents Server | https://github.com/hashed-io/hashed-private-server | Javascript |\n| Confidential Documents API | https://github.com/hashed-io/hashed-confidential-docs-client-api | Javascript |\n| Faucet Server | https://github.com/hashed-io/faucet-server | Javascript |\n",
    status: 'complete',
    cost: '7,070 usd',
    milestoneNo: 3,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e4'
    },
    id: 'ed5b5728-f313-433a-9c44-cc9d71e44de9',
    file_name: 'Afloat_Milestone4.md',
    project_id: '07c49e56-9a1e-444c-9a5b-a65d723ba757',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Afloat.md',
    md_content:
      "<!-- @format -->\n\n# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone, and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/milestone-deliverables-guidelines.md).**\n\n- **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/Afloat.md\n- **Milestone Number:** 4\n\n**Context** (optional)\n\nThis is the third milestone of Afloat's grant. It covers ordering fractional tax credits, confirming and settling the order.\n\nA running instance of the code can be found [here](https://hashed-portal-dev.hashed.systems/login)\n\n**Deliverables**\n\n| Number | Deliverable            | Link                                                                                                                                                                                                                                                                                                                                                                                                                      | Notes                                                                                                               |\n| -----: | ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- |\n|    0a. | License                | https://github.com/hashed-io/hashed-substrate/blob/main/LICENSE                                                                                                                                                                                                                                                                                                                                                           | MIT                                                                                                                 |\n|    0b. | Documentation          | https://github.com/hashed-io/hashed-network-portal-ui <br> https://github.com/hashed-io/hashed-substrate <br>[Marketplace](https://github.com/hashed-io/hashed-substrate/tree/main/pallets/gated-marketplace)<br> [Fruniques](https://github.com/hashed-io/hashed-substrate/tree/main/pallets/fruniques)<br> https://github.com/hashed-io/hashed-private-server <br> https://github.com/hashed-io/hashed-private-client-api | The code has inline documentation and each repository has a detailed README with build, run, and test instructions. |\n|    0c. | Testing                | [Github repository](https://github.com/hashed-io/hashed-substrate/blob/main/pallets/gated-marketplace/src/tests.rs)                                                                                                                                                                                                                                                                                                       | The test is built directly into the Rust project                                                                    |\n|    0d. | Video                  | [English](https://drive.google.com/file/d/1GGBJORWcM9S3wkxrPJSjD77PZl_qXuMm/view) and [Spanish](https://drive.google.com/file/d/1sFH-fcm8Mfa-2-boJ35egd8AWByZmo-9/view) versions                                                                                                                                                                                                            | English and Spanish videos explaining the functionality on this Milestone, as well as some details on how to run it.                                                                                                                 |\n|    0e. | Article                | [English](https://docs.google.com/document/d/1ybvHORc4SpFpTbVw97emFKPJeSdYPSXjsHKYnZ33s6U/view) and [Spanish](https://docs.google.com/document/d/1OJFNv0E7u93ljTYEuss_X5Xtp3mB-rxJ7TQ1pKzzoLU/view) versions                                                                                                                                                                                      | English and Spanish articles explaining the math of the fractional NFTs and the business advatanges                                                                                                                 |\n|     1. | Approve Redemption Specialists     | [Documentation](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#approve-redemption-specialists) |The redemption specialist role is currently part of the administrator role to reflect Afloat's current workflow. Step shown in video|  \n|     2. | Request Redemption                 | [Documentation](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#request-redemption) | Step shown in video.|  \n|     3. | View materials and Redeem          | |The tax credit documentation is visible and the workflow is shown in the video.|   \n|     4. | Asset Manager\t                    | [Documentation](https://github.com/hashed-io/hashed-substrate/blob/develop/docs/pallets-review/gated-marketplace.md#asset-manager) |The asset manager role is currently part of the administrator role to reflect Afloat's current workflow.  Step shown in video.|  \n|     5. | Launch Materials\t                  | | [Louise](https://www.vscpa.com/people/louise-reed) is giving a series of talks that started January 12th, sponsored by 4 CPA societies (Indiana, Georgia, Michigan and Virginia) called [From Bitcoin to Parachains: How One Strand of the Blockchain Industry is Evolving](https://www.micpa.org/cpe/store/course-detail?ProductId=141530). <br> <br> Louise also gave the \"[Roller Coaster of Media Reporting on Blockchain and Cryptocurrency](https://www.vscpa.com/sites/default/files/resources/Session%202C%20-%20The%20Roller%20Coaster%20of%20Media%20Reporting%20on%20Blockchain%20and%20Cryptocurrency.pdf)\" talk in September and November 2022, supported by the Virginia Society of CPAs with Virginia Technological Insitute. The videos from the milestone will be used to show the general functionality.|  \n\n\n\n**Repositories**\n(all MIT licensed)\n| Component | Repo | Language |\n| -----: | ----------- | ------- |\n| Afloat Client API | https://github.com/hashed-io/afloat-client-api | Javascript |\n| Marketplace UI | https://github.com/hashed-io/hashed-network-portal-ui | Quasar/Vue |\n| Marketplace pallet | https://github.com/hashed-io/hashed-substrate/tree/develop/pallets/gated-marketplace | Rust |\n| Fruniques pallet | https://github.com/hashed-io/hashed-substrate/tree/develop/pallets/fruniques | Rust |\n| Confidential Documents Server | https://github.com/hashed-io/hashed-private-server | Javascript |\n| Confidential Documents API | https://github.com/hashed-io/hashed-confidential-docs-client-api | Javascript |\n| Faucet Server | https://github.com/hashed-io/faucet-server | Javascript |\n",
    status: 'complete',
    cost: '7,070 usd',
    milestoneNo: 4,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e5'
    },
    id: 'fbb571be-a340-4853-8477-04c9f06a232a',
    file_name: 'AlgoCash-Milestone1.md',
    project_id: '78ca725c-c596-4919-ba69-79c1a3892b3b',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/AlgoCash.md',
    md_content:
      '# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSdSqj2vYjvpiIytkjcc40Pwl0Eg76WGUAq5L9e8eFuuOegmLw/viewform) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/General-Grants-Program/blob/master/grants/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** [Algo Cash](https://github.com/w3f/Open-Grants-Program/blob/master/applications/AlgoCash.md)\n* **PR Link:** https://github.com/w3f/Open-Grants-Program/pull/217\n* **Milestone Number:** 1\n\n\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 1. | Source code|https://github.com/ReserveLabs/AlgoCash|Token mint, Bond purchase and redemption are deliverable functions in this milestone.| \n| 2.  | License|https://github.com/ReserveLabs/AlgoCash/blob/main/LICENSE| Apache 2.0 |\n| 3.  | Documentation|https://github.com/ReserveLabs/AlgoCash/blob/main/README.md| Brief Intro of Algo Cash, code structure and how to deploy the contracts.| \n| 4.  | Tests|https://github.com/ReserveLabs/AlgoCash/tree/main/tests|Tests for Distribution, Treasury and Boradroom|   \n| 5.  | Demo vidoe|https://youtu.be/RalxYnx0Go8| Demo for ALB and ALC working woth Treasury.| \n| 6.  |Dock Image| http://dl.veim.cn/download/algocash/europa-algocash.tar.gz|Please kindly follow the [README](https://github.com/ReserveLabs/AlgoCash/blob/main/README.md#docker) to run the docker.|\n',
    status: 'complete',
    cost: '5,000 dai',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e6'
    },
    id: '7b60be90-cbdb-4725-aba4-c317c8a450ed',
    file_name: 'anchor_milestone_1.md',
    project_id: 'ff1fd744-f93a-424a-a129-4d2ef9d20401',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Anchor.md',
    md_content:
      '# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/Support%20Docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** [https://github.com/w3f/Grants-Program/blob/master/applications/Anchor.md](https://github.com/w3f/Grants-Program/blob/master/applications/Anchor.md) \n* **Milestone Number:** 1\n\n**Context** (optional)\n\n* Anchor pallet, unit test code and dockerfile for testing , README.\n\n* Anchor.js, the JS lib and Playground base on React. Test network is on line too.\n\n**Deliverables**\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 0a. | License | [https://github.com/ff13dfly/Anchor/blob/main/LICENSE-APACHE2](https://github.com/ff13dfly/Anchor/blob/main/LICENSE-APACHE2) [https://github.com/ff13dfly/Anchor/blob/main/LICENSE-GPL3](https://github.com/ff13dfly/Anchor/blob/main/LICENSE-GPL3) | |\n| 0b. | Documentation | [https://github.com/ff13dfly/Anchor/blob/main/README.md](https://github.com/ff13dfly/Anchor/blob/main/README.md) [https://github.com/ff13dfly/Anchor/blob/main/js/README.md](https://github.com/ff13dfly/Anchor/blob/main/js/README.md) | |\n| 0c. | Testing Guide | [https://github.com/ff13dfly/Anchor/blob/main/frame/anchor/README.md](https://github.com/ff13dfly/Anchor/blob/main/frame/anchor/README.md) [https://github.com/ff13dfly/Anchor/blob/main/js/playground/README.md](https://github.com/ff13dfly/Anchor/blob/main/js/playground/README.md) | | |\n| 0d. | Docker |[https://github.com/ff13dfly/Anchor/tree/main/docker](https://github.com/ff13dfly/Anchor/tree/main/docker)| |\n| 0e. | Anchor pallet |[https://github.com/ff13dfly/Anchor](https://github.com/ff13dfly/Anchor)| Bug fix and code improvement |\n| 0f. | Anchor.js | [https://github.com/ff13dfly/Anchor/tree/main/js/playground](https://github.com/ff13dfly/Anchor/tree/main/js/playground) [https://github.com/ff13dfly/Anchor/tree/main/js/test](https://github.com/ff13dfly/Anchor/tree/main/js/test)| There is also a live playground here [https://playground.metanchor.net](https://playground.metanchor.net). | |\n\n**Additional Information**\n\n* About the dockerfile, I can run it and see the log in docker desktop, but I still have problem to access it. Normally, I tested the functions on local bin, no issues for me.\n\n* I have released the binrary substrate with anchor pallet. Hope to help, it is easy to test.',
    status: 'complete',
    cost: '6,000 usdt',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e7'
    },
    id: '8e7c3b22-419d-43fa-9b67-6b2fa64bca19',
    file_name: 'ArtZero_InkWhale_Milestone_1.md',
    project_id: '7a393fe8-ae2b-4ec0-9a7d-d12cc40354ee',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/ArtZero_InkWhale.md',
    md_content:
      "# Milestone Delivery :mailbox:\n\n> ⚡ Only the GitHub account that submitted the application is allowed to submit milestones.\n>\n> Don't remove any of the mandatory parts presented in bold letters or as headlines! Lines starting with `>`, such as this one, can be removed.\n\n**The [invoice form :pencil:](https://forms.gle/LSRr7PCjBpEbKGh89) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/Support%20Docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/ArtZero_InkWhale.md\n* **Milestone Number:** 1\n\n**Context** (optional)\n\n**Deliverables**\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 0a.    | License            | https://github.com/ArtZero-io/Contracts/blob/feature/ink-4-version/LICENSE  | |\n| 0b.    | Documentation      | Official document is at https://docs.artzero.io/ Technical documents are at https://docs.google.com/document/d/1QWJW2YAFXcD_X-xvwcTee_W9Gfn2GXNdKYdoe0m7iv8/edit# and https://docs.google.com/document/d/1bPq9aFMaaVgKgsYWG3K4APubRK33OloY4_gHM3c8wo0/edit | |\n| 0c.    | Testing      | Contract Tests can be found at https://github.com/ArtZero-io/Contracts/tree/feature/ink-4-version/Azero_Contracts/tests Front-end Test: https://github.com/ArtZero-io/frontend-react/tree/ink4-upgrade/docs Backend API Test: https://github.com/ArtZero-io/backend/tree/main/docs| |\n| 0d.    | Article/Tutorial   | Several articles are published at https://medium.com/@artzero_io | |\n| 1. | Smart contract Development | Code can be found in https://github.com/ArtZero-io/Contracts branch feature/ink-4-version | |\n| 2. | Backend | Backend code is at https://github.com/ArtZero-io/backend and handles the following tasks: Monitor NFT bids in the queue and update Bid table in the database; Cache Images from IPFS to CloudFlare Image; Cache NFT Metadata to local database; Monitor NFT Collection changes and update the database; Monitor NFT Information and update the database; Telegram bot to alert system operators: queue length and access attempt and work load. | |\n| 3. | Frontend | Our front-end demo can be seen at https://alephzero.artzero.io/ for AlephZero network and https://shibuya.artzero.io/ for Shibuya (Astar testnet). The git repo is at https://github.com/ArtZero-io/frontend-react branch ink4-upgrade | |\n\n**Additional Information**\n",
    status: 'complete',
    cost: '15,000 usd',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e8'
    },
    id: '3b61b9a6-527d-4c19-a286-20519918048f',
    file_name: 'ArtZero_InkWhale_Milestone_2.md',
    project_id: '7a393fe8-ae2b-4ec0-9a7d-d12cc40354ee',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/ArtZero_InkWhale.md',
    md_content:
      '# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://forms.gle/LSRr7PCjBpEbKGh89) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/Support%20Docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/blob/master/applications/ArtZero_InkWhale.md\n* **Milestone Number:** 2\n\n**Context** (optional)\nInk Whale token is now INW instead of WAL\n\n**Deliverables**\nMilestone 2  — Ink Whale Staking and Yield Farming Platform Development\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| 0a.    | License            | https://github.com/InkWhale-net/contracts/blob/main/LICENSE  | |\n| 0b.    | Documentation      | Official Document is at https://docs.inkwhale.net/ Technical documents are at https://github.com/InkWhale-net/backend/blob/main/docs/apis.md and https://github.com/InkWhale-net/contracts/blob/main/inkwhale_contract/docs/technical_doc.md | |\n| 0c.    | Testing Guide      | https://github.com/InkWhale-net/contracts/tree/main/tests/readme.md | |\n| 0d.    | Article/Tutorial   | https://medium.com/@artzero_io/aztzeros-nft-yield-farming-pool-guide-for-creators-c20057fa0d89 | |\n| 1. | Smart Contract Development | https://github.com/InkWhale-net/contracts/blob/main/readme.md Completed following functions: create PSP22 token, create a staking pool, create NFT yield farm, create token yield farm, add rewards to pool, remove rewards from pool, claim reward from pool. We have to create 9 different contracts; INW token contract that allows public minting and fixed total supply; General psp22 token contract and psp22 token generator contract; Pool Contract and Pool Generator Contract; NFT Farming Contract and NFT Farming Generator Contract; LP Farming Contract and LP Farming Generator Contract. | |\n| 2. | Backend | https://github.com/InkWhale-net/backend follow readme.md to run the backend service | |\n| 3. | Frontend | The front-end demo can be seen at https://testnet.inkwhale.net The code repo is at https://github.com/InkWhale-net/frontend branch ink4. This front-end uses our latest design. | |\n\n**Additional Information**\n',
    status: 'complete',
    cost: '15,000 usd',
    milestoneNo: 2,
    merged_at: '',
    __v: 0
  },
  {
    _id: {
      $oid: '64ca432c718d788969a5b2e9'
    },
    id: 'd1dfc25a-1a55-4206-a68c-2d58d1b875b7',
    file_name: 'Awesome-Polka-1.md',
    project_id: '3f5b6b6d-3341-4e2c-b941-a1f6835cb7af',
    user_github_id: '',
    project_md_link:
      'https://github.com/shaurya-ATR940/Grants-Program_dummy/blob/master/applications/Awesome-Polka.md',
    md_content:
      '# Milestone Delivery :mailbox:\n\n**The [invoice form :pencil:](https://docs.google.com/forms/d/e/1FAIpQLSfmNYaoCgrxyhzgoKQ0ynQvnNRoTmgApz9NrMp-hd8mhIiO0A/viewform) has been filled out correctly for this milestone and the delivery is according to the official [milestone delivery guidelines](https://github.com/w3f/Grants-Program/blob/master/docs/Support%20Docs/milestone-deliverables-guidelines.md).**  \n\n* **Application Document:** https://github.com/w3f/Grants-Program/tree/master/applications/Awesome-Polka.md\n* **Milestone Number:** 1\n\n**Context**\nThis milestone includes the functionality of the public part of the platform and the design of the project owner dashboard, as stated in the contract, normal users and project owners can use the platform.\n\n**Deliverables**\n\n| Number | Deliverable | Link | Notes |\n| ------------- | ------------- | ------------- |------------- |\n| **0a.** | License | [MIT](https://github.com/tolgayayci/awesome-polka/blob/dev/LICENSE) | License Added to All Branches |\n| **0b.** | Documentation | [Awesome Polka Docs](https://docs.awesomepolka.org/docs/awesome-polka/getting-started) | Base documentation provided, in near time this will be enhanced with examples and use cases. |\n| **0c.** | Testing and Testing Guide |  [Guide](https://docs.awesomepolka.org/docs/technical-details/testing) | API Tests & End to End tests are completed with a few users, also in this link you can see form validation tests. For future, hooks and api tests will be included in this page. |\n| **0e.** | Article | [Documentation Includes](https://docs.awesomepolka.org/docs/awesome-polka/getting-started) | Documentation like a kind of article about how to use this platform. |\n| **1.** | UI & UX Development | **Home Page:** [Link](https://awesomepolka.org) <br /><br /> **Projects Page:**  [Link](https://awesomepolka.org/projects)</br></br>**Project Detail Page:**  [Link](https://awesomepolka.org/projects/awesome-polka)<br /></br>**Articles Page:**  [Link](https://awesomepolka.org/articles)<br /></br>**Article Detail Page:**  [Link](https://awesomepolka.org/articles/09885b15-3a16-478f-aa2f-d6929d2f05c8)<br /></br>**Ranking Page:** [Link](https://awesomepolka.org/ranking)</br></br> **Learn Page:** [Link](https://awesomepolka.org/learn)</br></br> **UX Improvements & Testing:**  [Link](https://docs.awesomepolka.org/docs/technical-details/testing)| All pages that designed for milestones are completed, you can visit links to verify, ux improvements will be continue in future stages. | ... |\n| *2.* | Project Owner Dashboard  | [Dashboard Link](https://awesomepolka.org/dashboard/project) | You **must have an account** to use this dashboard. If you have an account, a "Dashboard" link appears in the footer of the site and you can access the dashboard by clicking this link. To request an account, click on the "Submit Project" on the main page or directly [this link](https://ts6prh04a2p.typeform.com/to/L4jpfJKl), after your membership is defined, you will receive an e-mail and you can start testing the dashboard.</br>|\n\n**Additional Information**\nAlthough milestones of the project have been completed, it will continue to be actively developed, I will publish a report stating its status in the next two quarters.\n\nI would like to offer a more detailed infrastructure for testing, but you can test it by using the platform in the easiest way, while everyone can view the public part, I will authorize you when you fill out the form for the project owner dashboard, so you can try this dashboard.\n\nApi key of many platforms such as algolia, aws, thirdweb, coinbase cloud is required to set up a test infrastructure from start to finish, so a partial test report has been published to make things easier.\n\nMain domain currently lists dev branch but after approval I will push a clean main branch and we will start from scratch with new projects, so you can tamper with it as you wish, these changes will not be visible in prod version.\n',
    status: 'complete',
    cost: '',
    milestoneNo: 1,
    merged_at: '',
    __v: 0
  }
];
